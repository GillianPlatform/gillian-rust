#begin_init_data
{
  "Node": [
    "Struct",
    "ReprRust",
    [
      [
        "next",
        [
          "Adt",
          [
            "Option",
            [
              [
                "Adt",
                [ "NonNull", [ [ "Adt", [ "Node", [ [ "Param", 0 ] ] ] ] ] ]
              ]
            ]
          ]
        ]
      ],
      [
        "prev",
        [
          "Adt",
          [
            "Option",
            [
              [
                "Adt",
                [ "NonNull", [ [ "Adt", [ "Node", [ [ "Param", 0 ] ] ] ] ] ]
              ]
            ]
          ]
        ]
      ],
      [ "element", [ "Param", 0 ] ]
    ]
  ],
  "Option": [ "Enum", [ [ "None", [] ], [ "Some", [ [ "Param", 0 ] ] ] ] ],
  "Box": [
    "Struct",
    "ReprRust",
    [
      [ "0", [ "Adt", [ "Unique", [ [ "Param", 0 ] ] ] ] ],
      [ "1", [ "Param", 1 ] ]
    ]
  ],
  "Global": [ "Struct", "ReprRust", [] ],
  "PhantomData": [ "Struct", "ReprRust", [] ],
  "LinkedList": [
    "Struct",
    "ReprRust",
    [
      [
        "head",
        [
          "Adt",
          [
            "Option",
            [
              [
                "Adt",
                [ "NonNull", [ [ "Adt", [ "Node", [ [ "Param", 0 ] ] ] ] ] ]
              ]
            ]
          ]
        ]
      ],
      [
        "tail",
        [
          "Adt",
          [
            "Option",
            [
              [
                "Adt",
                [ "NonNull", [ [ "Adt", [ "Node", [ [ "Param", 0 ] ] ] ] ] ]
              ]
            ]
          ]
        ]
      ],
      [ "len", [ "Scalar", "usize" ] ],
      [
        "marker",
        [
          "Adt",
          [
            "PhantomData",
            [
              [
                "Adt",
                [
                  "Box",
                  [
                    [ "Adt", [ "Node", [ [ "Param", 0 ] ] ] ],
                    [ "Adt", [ "Global", [] ] ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ]
  ],
  "NonNull": [
    "Struct",
    "ReprRust",
    [ [ "pointer", [ "Ref", { "mut": false, "ty": [ "Param", 0 ] } ] ] ]
  ],
  "Unique": [
    "Struct",
    "ReprRust",
    [
      [ "pointer", [ "Adt", [ "NonNull", [ [ "Param", 0 ] ] ] ] ],
      [ "_marker", [ "Adt", [ "PhantomData", [ [ "Param", 0 ] ] ] ] ]
    ]
  ]
}
#end_init_data
import "i__binop.gil", "i__lang.gil", "i__std_shims.gil";


pred dll_seg(+head, +tail_next, +tail, +head_prev, data) :
  (head == tail_next) * (tail == head_prev) * (data == {{  }}),
  (head == {{ 1i, {{ #hptr }} }}) * types(#lvar_0 : Obj) *
  ({{ {{ #lvar_0, {{  }} }} }} == #hptr) *
  <value>(#lvar_0, {{  }}, {{ "adt", "Node", {{ pty_T0 }} }}; {{ #head_next, #head_prev, #element }}) *
  (data == l+ ({{ #element }}, #rest)) *
  dll_seg(#head_next, tail_next, tail, head, #rest);


pred dll(+linked_list, data) :
  (linked_list == {{ #head, #tail, #len, {{  }} }}) *
  (#len == (l-len data)) *
  dll_seg(#head, {{ 0i, {{  }} }}, #tail, {{ 0i, {{  }} }}, data);

spec "LinkedList::<T>::new"()
  [[  emp  ]]
  [[  dll(ret, {{  }})  ]]
  normal
proc "LinkedList::<T>::new"() {
  bb0:  m_1 := {{ 0i, {{  }} }};
        m_2 := {{ 0i, {{  }} }};
        m_3 := {{  }};
        g_0 := m_1;
        m_1 := none;
        g_1 := m_2;
        m_2 := none;
        g_2 := m_3;
        m_3 := none;
        m_0 := {{ g_0, g_1, 0i, g_2 }};
        g_3 := m_0;
        m_0 := none;
        ret := g_3;
        goto rlab;
  rlab: return
};


spec "LinkedList::<T>::push_front_node"(pty_T0, m_1self, m_2node)
  [[  ({{ #lvar_0, {{  }} }} == #vself) *
      (m_2node == #vnode) *
      <value>(l-nth(#vself, 0i), l-nth(#vself, 1i), {{ "adt", "LinkedList", {{ pty_T0 }} }}; #vdll) *
      types(#lvar_1 : Obj) *
      ({{ {{ {{ {{ #lvar_1, {{  }} }} }}, {{  }} }}, {{  }} }} == #vnode) *
      <value>(#lvar_1, {{  }}, {{ "adt", "Node", {{ pty_T0 }} }}; {{ {{ 0i, {{  }} }}, {{ 0i, {{  }} }}, #velem }}) *
      ((l-len #vdata) i<# 18446744073709551615i) *
      dll(#vdll, #vdata) *
      (m_1self == {{ #lvar_0, {{  }} }}) *
      types(#lvar_0 : Obj)  ]]
  [[  <value>(l-nth(#vself, 0i), l-nth(#vself, 1i), {{ "adt", "LinkedList", {{ pty_T0 }} }}; #new_vdll) *
      dll(#new_vdll, l+ ({{ #velem }}, #vdata))  ]]
  normal
proc "LinkedList::<T>::push_front_node"(pty_T0, m_1self, m_2node) {
        g_0 := m_1self;
        m_1self := [alloc]({{ "ref", true, {{ "adt", "LinkedList",
                           {{ pty_T0 }} }} }});
        u := [store_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref",
                           true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }},
                           g_0);
        g_1 := m_2node;
        m_2node := [alloc]({{ "adt", "Box", {{ {{ "adt", "Node",
                           {{ pty_T0 }} }}, {{ "adt", "Global",
                           {{  }} }} }} }});
        u := [store_value](l-nth(m_2node, 0i), l-nth(m_2node, 1i), {{ "adt",
                           "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }},
                           {{ "adt", "Global", {{  }} }} }} }}, g_1);
        m_8 := [alloc]({{ "ref", true, {{ "adt", "Node", {{ pty_T0 }} }} }});
        m_15 := [alloc]({{ "ref", true, {{ "adt", "Node", {{ pty_T0 }} }} }});
        m_18 := [alloc]({{ "tuple", {{ "usize", "bool" }} }});
  bb0:  g_3 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref",
                            true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }},
                            true);
        g_2 := l-nth(g_3, 0i);
        g_5 := [load_value](l-nth(g_2, 0i),
                            l+ (l-nth(g_2, 1i), {{ {{ "f", 0i, {{ "adt",
                                "LinkedList", {{ pty_T0 }} }} }} }}),
                            {{ "adt", "Option", {{ {{ "adt", "NonNull",
                            {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }},
                            true);
        g_4 := l-nth(g_5, 0i);
        m_3 := g_4;
        g_6 := m_3;
        m_3 := none;
        g_8 := [load_value](l-nth(m_2node, 0i), l-nth(m_2node, 1i), {{ "adt",
                            "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }},
                            {{ "adt", "Global", {{  }} }} }} }}, true);
        g_7 := l-nth(g_8, 0i);
        u := [store_value](l-nth(l-nth(l-nth(l-nth(g_7, 0i), 0i), 0i), 0i),
                           l+ (l-nth(l-nth(l-nth(l-nth(g_7, 0i), 0i), 0i), 1i),
                               {{ {{ "f", 0i, {{ "adt", "Node",
                               {{ pty_T0 }} }} }} }}),
                           {{ "adt", "Option", {{ {{ "adt", "NonNull",
                           {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }},
                           g_6);
        m_4 := {{ 0i, {{  }} }};
        g_9 := m_4;
        m_4 := none;
        g_11 := [load_value](l-nth(m_2node, 0i), l-nth(m_2node, 1i),
                             {{ "adt", "Box", {{ {{ "adt", "Node",
                             {{ pty_T0 }} }}, {{ "adt", "Global",
                             {{  }} }} }} }}, true);
        g_10 := l-nth(g_11, 0i);
        u := [store_value](l-nth(l-nth(l-nth(l-nth(g_10, 0i), 0i), 0i), 0i),
                           l+ (l-nth(l-nth(l-nth(l-nth(g_10, 0i), 0i), 0i), 1i),
                               {{ {{ "f", 1i, {{ "adt", "Node",
                               {{ pty_T0 }} }} }} }}),
                           {{ "adt", "Option", {{ {{ "adt", "NonNull",
                           {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }},
                           g_9);
        g_13 := [load_value](l-nth(m_2node, 0i), l-nth(m_2node, 1i),
                             {{ "adt", "Box", {{ {{ "adt", "Node",
                             {{ pty_T0 }} }}, {{ "adt", "Global",
                             {{  }} }} }} }}, false);
        g_12 := l-nth(g_13, 0i);
        m_9 := g_12;
        g_14 := m_9;
        m_9 := none;
        g_15 := "std::boxed::Box::<T, A>::leak"({{ "adt", "Node",
                                                {{ pty_T0 }} }}, {{ "adt",
                                                "Global", {{  }} }}, g_14);
        u := [store_value](l-nth(m_8, 0i), l-nth(m_8, 1i), {{ "ref", true,
                           {{ "adt", "Node", {{ pty_T0 }} }} }}, g_15);
        goto bb1;
  bb1:  g_17 := [load_value](l-nth(m_8, 0i), l-nth(m_8, 1i), {{ "ref", true,
                             {{ "adt", "Node", {{ pty_T0 }} }} }}, true);
        g_16 := l-nth(g_17, 0i);
        m_7 := g_16;
        g_18 := m_7;
        m_7 := none;
        g_19 := "mut_ref_to_nonnull_ptr"({{ "ref", true, {{ "adt", "Node",
                                         {{ pty_T0 }} }} }}, {{ "adt",
                                         "NonNull", {{ {{ "adt", "Node",
                                         {{ pty_T0 }} }} }} }}, g_18);
        m_6 := g_19;
        goto bb2;
  bb2:  g_20 := m_6;
        m_6 := none;
        m_5node := {{ 1i, {{ g_20 }} }};
        g_22 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i),
                             {{ "ref", true, {{ "adt", "LinkedList",
                             {{ pty_T0 }} }} }}, true);
        g_21 := l-nth(g_22, 0i);
        g_24 := [load_discr](l-nth(g_21, 0i),
                             l+ (l-nth(g_21, 1i), {{ {{ "f", 0i, {{ "adt",
                                 "LinkedList", {{ pty_T0 }} }} }} }}),
                             {{ "adt", "Option", {{ {{ "adt", "NonNull",
                             {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }});
        g_23 := l-nth(g_24, 0i);
        m_11 := g_23;
        g_25 := m_11;
        m_11 := none;
        goto [(g_25 = 0i)] bb3 sw0;
  sw0:  goto [(g_25 = 1i)] bb4 sw1;
  sw1:  goto bb5;
  bb3:  goto bb6;
  bb4:  g_27 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i),
                             {{ "ref", true, {{ "adt", "LinkedList",
                             {{ pty_T0 }} }} }}, true);
        g_26 := l-nth(g_27, 0i);
        g_29 := [load_value](l-nth(g_26, 0i),
                             l+ (l-nth(g_26, 1i), {{ {{ "f", 0i, {{ "adt",
                                 "LinkedList", {{ pty_T0 }} }} }}, {{ "d",
                                 1i, {{ "adt", "Option", {{ {{ "adt",
                                 "NonNull", {{ {{ "adt", "Node",
                                 {{ pty_T0 }} }} }} }} }} }} }}, {{ "vf", 0i,
                                 {{ "adt", "Option", {{ {{ "adt", "NonNull",
                                 {{ {{ "adt", "Node",
                                 {{ pty_T0 }} }} }} }} }} }}, 1i }} }}),
                             {{ "adt", "NonNull", {{ {{ "adt", "Node",
                             {{ pty_T0 }} }} }} }}, true);
        g_28 := l-nth(g_29, 0i);
        m_13head := g_28;
        m_14 := m_5node;
        m_16 := m_13head;
        g_30 := m_16;
        m_16 := none;
        g_31 := "std::ptr::NonNull::<T>::as_ptr"({{ "adt", "Node",
                                                 {{ pty_T0 }} }}, g_30);
        u := [store_value](l-nth(m_15, 0i), l-nth(m_15, 1i), {{ "ref", true,
                           {{ "adt", "Node", {{ pty_T0 }} }} }}, g_31);
        goto bb7;
  bb5:  fail [Unreachable]();
  bb6:  m_12 := m_5node;
        g_32 := m_12;
        m_12 := none;
        g_34 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i),
                             {{ "ref", true, {{ "adt", "LinkedList",
                             {{ pty_T0 }} }} }}, true);
        g_33 := l-nth(g_34, 0i);
        u := [store_value](l-nth(g_33, 0i),
                           l+ (l-nth(g_33, 1i), {{ {{ "f", 1i, {{ "adt",
                               "LinkedList", {{ pty_T0 }} }} }} }}),
                           {{ "adt", "Option", {{ {{ "adt", "NonNull",
                           {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }},
                           g_32);
        m_10 := {{  }};
        goto bb8;
  bb7:  g_35 := m_14;
        m_14 := none;
        g_37 := [load_value](l-nth(m_15, 0i), l-nth(m_15, 1i), {{ "ref",
                             true, {{ "adt", "Node", {{ pty_T0 }} }} }}, true);
        g_36 := l-nth(g_37, 0i);
        u := [store_value](l-nth(g_36, 0i),
                           l+ (l-nth(g_36, 1i), {{ {{ "f", 1i, {{ "adt",
                               "Node", {{ pty_T0 }} }} }} }}),
                           {{ "adt", "Option", {{ {{ "adt", "NonNull",
                           {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }},
                           g_35);
        m_10 := {{  }};
        goto bb8;
  bb8:  m_17 := m_5node;
        g_38 := m_17;
        m_17 := none;
        g_40 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i),
                             {{ "ref", true, {{ "adt", "LinkedList",
                             {{ pty_T0 }} }} }}, true);
        g_39 := l-nth(g_40, 0i);
        u := [store_value](l-nth(g_39, 0i),
                           l+ (l-nth(g_39, 1i), {{ {{ "f", 0i, {{ "adt",
                               "LinkedList", {{ pty_T0 }} }} }} }}),
                           {{ "adt", "Option", {{ {{ "adt", "NonNull",
                           {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }},
                           g_38);
        g_42 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i),
                             {{ "ref", true, {{ "adt", "LinkedList",
                             {{ pty_T0 }} }} }}, true);
        g_41 := l-nth(g_42, 0i);
        g_44 := [load_value](l-nth(g_41, 0i),
                             l+ (l-nth(g_41, 1i), {{ {{ "f", 2i, {{ "adt",
                                 "LinkedList", {{ pty_T0 }} }} }} }}),
                             "usize", true);
        g_43 := l-nth(g_44, 0i);
        g_45 := "i__binop_checked_add"(g_43, 1i, 18446744073709551615i);
        u := [store_value](l-nth(m_18, 0i), l-nth(m_18, 1i), {{ "tuple",
                           {{ "usize", "bool" }} }}, g_45);
        g_47 := [load_value](l-nth(m_18, 0i),
                             l+ (l-nth(m_18, 1i), {{ {{ "f", 1i, {{ "tuple",
                                 {{ "usize", "bool" }} }} }} }}),
                             "bool", false);
        g_46 := l-nth(g_47, 0i);
        u := "i__lang_assert"((not g_46), "Ugly assert message for now");
        goto bb9;
  bb9:  g_49 := [load_value](l-nth(m_18, 0i),
                             l+ (l-nth(m_18, 1i), {{ {{ "f", 0i, {{ "tuple",
                                 {{ "usize", "bool" }} }} }} }}),
                             "usize", false);
        g_48 := l-nth(g_49, 0i);
        g_51 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i),
                             {{ "ref", true, {{ "adt", "LinkedList",
                             {{ pty_T0 }} }} }}, true);
        g_50 := l-nth(g_51, 0i);
        u := [store_value](l-nth(g_50, 0i),
                           l+ (l-nth(g_50, 1i), {{ {{ "f", 2i, {{ "adt",
                               "LinkedList", {{ pty_T0 }} }} }} }}),
                           "usize", g_48);
        m_0 := {{  }};
        goto bb10;
  bb10: g_52 := m_0;
        m_0 := none;
        ret := g_52;
        goto rlab;
  rlab: u := [free](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true,
                    {{ "adt", "LinkedList", {{ pty_T0 }} }} }});
        u := [free](l-nth(m_2node, 0i), l-nth(m_2node, 1i), {{ "adt", "Box",
                    {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global",
                    {{  }} }} }} }});
        u := [free](l-nth(m_8, 0i), l-nth(m_8, 1i), {{ "ref", true, {{ "adt",
                    "Node", {{ pty_T0 }} }} }});
        u := [free](l-nth(m_15, 0i), l-nth(m_15, 1i), {{ "ref", true,
                    {{ "adt", "Node", {{ pty_T0 }} }} }});
        u := [free](l-nth(m_18, 0i), l-nth(m_18, 1i), {{ "tuple", {{ "usize",
                    "bool" }} }});
        return
};


spec "LinkedList::<T>::push_front"(pty_T0, m_1self, m_2elt)
  [[  ({{ #lvar_0, {{  }} }} == #vself) *
      (m_2elt == #velem) *
      <value>(l-nth(#vself, 0i), l-nth(#vself, 1i), {{ "adt", "LinkedList", {{ pty_T0 }} }}; #vdll) *
      ((l-len #vdata) i<# 18446744073709551615i) *
      dll(#vdll, #vdata) *
      (m_1self == {{ #lvar_0, {{  }} }}) *
      types(#lvar_0 : Obj)  ]]
  [[  <value>(l-nth(#vself, 0i), l-nth(#vself, 1i), {{ "adt", "LinkedList", {{ pty_T0 }} }}; #new_vdll) *
      dll(#new_vdll, l+ ({{ #velem }}, #vdata))  ]]
  normal
proc "LinkedList::<T>::push_front"(pty_T0, m_1self, m_2elt) {
        g_0 := m_1self;
        m_1self := [alloc]({{ "ref", true, {{ "adt", "LinkedList",
                           {{ pty_T0 }} }} }});
        u := [store_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref",
                           true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }},
                           g_0);
  bb0:  g_2 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref",
                            true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }},
                            true);
        g_1 := l-nth(g_2, 0i);
        m_4 := g_1;
        g_3 := m_2elt;
        m_2elt := none;
        m_7 := g_3;
        g_4 := m_7;
        m_7 := none;
        g_5 := "Node::<T>::new"(pty_T0, g_4);
        m_6 := g_5;
        goto bb1;
  bb1:  g_6 := m_6;
        m_6 := none;
        g_7 := "std::boxed::Box::<T>::new"({{ "adt", "Node", {{ pty_T0 }} }},
                                           g_6);
        m_5 := g_7;
        goto bb2;
  bb2:  g_8 := m_4;
        m_4 := none;
        g_9 := m_5;
        m_5 := none;
        g_10 := "LinkedList::<T>::push_front_node"(pty_T0, g_8, g_9);
        m_3 := g_10;
        goto bb3;
  bb3:  m_0 := {{  }};
        goto bb4;
  bb4:  g_11 := m_0;
        m_0 := none;
        ret := g_11;
        goto rlab;
  rlab: u := [free](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true,
                    {{ "adt", "LinkedList", {{ pty_T0 }} }} }});
        return
};


proc "Node::<T>::new"(pty_T0, m_1element) {
  bb0:  m_2 := {{ 0i, {{  }} }};
        m_3 := {{ 0i, {{  }} }};
        g_0 := m_1element;
        m_1element := none;
        m_4 := g_0;
        g_1 := m_2;
        m_2 := none;
        g_2 := m_3;
        m_3 := none;
        g_3 := m_4;
        m_4 := none;
        m_0 := {{ g_1, g_2, g_3 }};
        goto bb1;
  bb1:  goto bb2;
  bb2:  g_4 := m_0;
        m_0 := none;
        ret := g_4;
        goto rlab;
  rlab: return
};
