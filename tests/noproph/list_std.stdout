#begin_init_data
{"Box":["Struct","ReprRust",[["0",["Adt",["Unique",[["Param",0]]]]],["1",["Param",1]]]],"Global":["Struct","ReprRust",[]],"LinkedList":["Struct","ReprRust",[["head",["Adt",["Option",[["Adt",["NonNull",[["Adt",["Node",[["Param",0]]]]]]]]]]],["tail",["Adt",["Option",[["Adt",["NonNull",[["Adt",["Node",[["Param",0]]]]]]]]]]],["len",["Scalar","usize"]],["marker",["Adt",["PhantomData",[["Adt",["Box",[["Adt",["Node",[["Param",0]]]],["Adt",["Global",[]]]]]]]]]]]],"Node":["Struct","ReprRust",[["next",["Adt",["Option",[["Adt",["NonNull",[["Adt",["Node",[["Param",0]]]]]]]]]]],["prev",["Adt",["Option",[["Adt",["NonNull",[["Adt",["Node",[["Param",0]]]]]]]]]]],["element",["Param",0]]]],"NonNull":["Struct","ReprRust",[["pointer",["Ptr",{"mut":false,"ty":["Param",0]}]]]],"Option":["Enum",[["None",[]],["Some",[["Param",0]]]]],"PhantomData":["Struct","ReprRust",[]],"Unique":["Struct","ReprRust",[["pointer",["Adt",["NonNull",[["Param",0]]]]],["_marker",["Adt",["PhantomData",[["Param",0]]]]]]]}
#end_init_data

import "i__binop.gil", "i__lang.gil", "i__std_shims.gil", "i__prophecies.gil", "i__std_shims_no_pcy.gil", "i__lang_no_pcy.gil";

axiomatic spec extract_head(pLft_0, pty_T0, list)
[[ "list_ref_mut_htl::<T>"(#pLft_0, #pty_T0, #list, {{ #head, #tail, #len }})
  * (#head == {{ 1i, {{ #p }} }})
  * <lft>(#pLft_0; true)
  * types(#lvar_2: Obj, #lvar_3: List) * (#p == {{ {{ #lvar_2, #lvar_3 }} }})
  * types(#len: Int)
  * types(#lvar_0: Obj, #lvar_1: List) * (#list == {{ #lvar_0, #lvar_1 }})
  * (list == #list)
  * (pty_T0 == #pty_T0)
  * (pLft_0 == #pLft_0) ]]
[[ "<&mut T as gilogic::Ownable>::own"(#pLft_0, #pty_T0, {{ l-nth(l-nth(#p, 0i), 0i), l+(l-nth(l-nth(#p, 0i), 1i), {{ {{ "f", 2i, {{ "adt", "Node", {{ #pty_T0 }} }} }} }}) }})
  * <lft>(#pLft_0; true) ]]
normal

axiomatic spec "gilogic::ownable::freeze_params::<(std::option::Option<std::ptr::NonNull<Node<T>>>, std::option::Option<std::ptr::NonNull<Node<T>>>, usize), LinkedList<T>>"(pLft_0, pty_T0, p)
[[ "<&mut LinkedList<T> as gilogic::Ownable>::own"(#pLft_0, #pty_T0, #p)
  * types(#lvar_0: Obj, #lvar_1: List) * (#p == {{ #lvar_0, #lvar_1 }})
  * (p == #p)
  * (pty_T0 == #pty_T0)
  * (pLft_0 == #pLft_0) ]]
[[ "<LinkedList<T> as gilogic::FrozenOwn<(std::option::Option<std::ptr::NonNull<Node<T>>>, std::option::Option<std::ptr::NonNull<Node<T>>>, usize)>>::mut_ref_own_frozen"(#pLft_0, #pty_T0, #p, #frozen) ]]
normal

axiomatic spec "extract_head::<T>"(pLft_0, pty_T0, list)
[[ "list_ref_mut_htl::<T>"(#pLft_0, #pty_T0, #list, {{ #head, #tail, #len }})
  * (#head == {{ 1i, {{ #p }} }})
  * <lft>(#pLft_0; true)
  * types(#lvar_2: Obj, #lvar_3: List) * (#p == {{ {{ #lvar_2, #lvar_3 }} }})
  * types(#len: Int)
  * types(#lvar_0: Obj, #lvar_1: List) * (#list == {{ #lvar_0, #lvar_1 }})
  * (list == #list)
  * (pty_T0 == #pty_T0)
  * (pLft_0 == #pLft_0) ]]
[[ "<&mut T as gilogic::Ownable>::own"(#pLft_0, #pty_T0, {{ l-nth(l-nth(#p, 0i), 0i), l+(l-nth(l-nth(#p, 0i), 1i), {{ {{ "f", 2i, {{ "adt", "Node", {{ #pty_T0 }} }} }} }}) }})
  * <lft>(#pLft_0; true) ]]
normal

pred "dll_seg::<T>"(+pty_T0, +head, +tail_next, +tail, +head_prev, len):
  (#head == #tail_next) * (#tail == #head_prev) * (#len == 0i)
  * types(#len: Int)
  * (len == #len)
  * (head_prev == #head_prev)
  * (tail == #tail)
  * (tail_next == #tail_next)
  * (head == #head), (#head == {{ 1i, {{ #hptr }} }})
  * types(#lvar_0: Obj, #lvar_1: List) * ({{ {{ #lvar_0, #lvar_1 }} }} == #hptr)
  * <value>(#lvar_0, #lvar_1, {{ "adt", "Node", {{ pty_T0 }} }}; {{ #head_next, #head_prev, #element }})
  * "<T as gilogic::Ownable>::own"(pty_T0, #element)
  * "dll_seg::<T>"(pty_T0, #head_next, #tail_next, #tail, #head, ((#len) i- (1i)))
  * (0i i<# #len)
  * types(#len: Int)
  * (len == #len)
  * (head_prev == #head_prev)
  * (tail == #tail)
  * (tail_next == #tail_next)
  * (head == #head);


pred "dll_seg_r::<T>"(+pty_T0, +head, +tail_next, +tail, +head_prev, len):
  (#head == #tail_next) * (#tail == #head_prev) * (#len == 0i)
  * types(#len: Int)
  * (len == #len)
  * (head_prev == #head_prev)
  * (tail == #tail)
  * (tail_next == #tail_next)
  * (head == #head), (#tail == {{ 1i, {{ #tptr }} }})
  * types(#lvar_2: Obj, #lvar_3: List) * ({{ {{ #lvar_2, #lvar_3 }} }} == #tptr)
  * <value>(#lvar_2, #lvar_3, {{ "adt", "Node", {{ pty_T0 }} }}; {{ #tail_next, #tail_prev, #element }})
  * "<T as gilogic::Ownable>::own"(pty_T0, #element)
  * "dll_seg_r::<T>"(pty_T0, #head, #tail, #tail_prev, #head_prev, ((#len) i- (1i)))
  * (0i i<# #len)
  * types(#len: Int)
  * (len == #len)
  * (head_prev == #head_prev)
  * (tail == #tail)
  * (tail_next == #tail_next)
  * (head == #head);


pred "<LinkedList<T> as gilogic::FrozenOwn<(std::option::Option<std::ptr::NonNull<Node<T>>>, std::option::Option<std::ptr::NonNull<Node<T>>>, usize)>>::frozen_own"(+pty_T1, +THIS, G_2):
  (#G_2 == {{ #head, #tail, #len }})
  * (#THIS == {{ #head, #tail, #len, {{  }} }})
  * "dll_seg::<T>"(pty_T1, #head, #p, #tail, #n, #len)
  * (#p == {{ 0i, {{  }} }})
  * (#n == {{ 0i, {{  }} }})
  * (G_2 == #G_2)
  * (THIS == #THIS);


pred "list_ref_mut_htl::<T>"(+pLft_a, +pty_T0, +this, frozen):
  "<LinkedList<T> as gilogic::FrozenOwn<(std::option::Option<std::ptr::NonNull<Node<T>>>, std::option::Option<std::ptr::NonNull<Node<T>>>, usize)>>::mut_ref_own_frozen"(pLft_a, pty_T0, #this, #frozen)
  * types(#lvar_10: Obj, #lvar_11: List) * (#this == {{ #lvar_10, #lvar_11 }})
  * (frozen == #frozen)
  * (this == #this);


pred "<LinkedList<T> as gilogic::Ownable>::own"(+pty_T0, +self):
  (#self == {{ #head, #tail, #len, {{  }} }})
  * "dll_seg::<T>"(pty_T0, #head, #p, #tail, #n, #len)
  * (#p == {{ 0i, {{  }} }})
  * (#n == {{ 0i, {{  }} }})
  * (self == #self);


abstract pred "<T as gilogic::Ownable>::own"(+pty_T0, +self);


pred "<LinkedList<T> as gilogic::FrozenOwn<(std::option::Option<std::ptr::NonNull<Node<T>>>, std::option::Option<std::ptr::NonNull<Node<T>>>, usize)>>::just_ref_mut_points_to"(+pLft_0, +pty_T0, +this, frozen):
  <value>(l-nth(#this, 0i), l-nth(#this, 1i), {{ "adt", "LinkedList", {{ pty_T0 }} }}; #v)
  * "<LinkedList<T> as gilogic::FrozenOwn<(std::option::Option<std::ptr::NonNull<Node<T>>>, std::option::Option<std::ptr::NonNull<Node<T>>>, usize)>>::frozen_own"(pty_T0, #v, #frozen)
  * types(#lvar_0: Obj, #lvar_1: List) * (#this == {{ #lvar_0, #lvar_1 }})
  * (frozen == #frozen)
  * (this == #this);


pred "<T as gilogic::FrozenOwn<()>>::just_ref_mut_points_to"(+pLft_0, +pty_T0, +this, frozen):
  <value>(l-nth(#this, 0i), l-nth(#this, 1i), pty_T0; #v)
  * "<T as gilogic::FrozenOwn<()>>::frozen_own"(pty_T0, #v, #frozen)
  * types(#lvar_0: Obj, #lvar_1: List) * (#this == {{ #lvar_0, #lvar_1 }})
  * (frozen == #frozen)
  * (this == #this);


pred "<&mut T as gilogic::Ownable>::own"(+pLft_erased, +pty_T0, +self):
  "<T as gilogic::FrozenOwn<()>>::mut_ref_own_frozen"(pLft_erased, pty_T0, #self, {{  }})
  * types(#lvar_0: Obj, #lvar_1: List) * (#self == {{ #lvar_0, #lvar_1 }})
  * (self == #self);


pred "<LinkedList<T> as gilogic::FrozenOwn<(std::option::Option<std::ptr::NonNull<Node<T>>>, std::option::Option<std::ptr::NonNull<Node<T>>>, usize)>>::mut_ref_own_frozen"(+pLft_0, +pty_T0, +this, frozen):
  "<LinkedList<T> as gilogic::FrozenOwn<(std::option::Option<std::ptr::NonNull<Node<T>>>, std::option::Option<std::ptr::NonNull<Node<T>>>, usize)>>::just_ref_mut_points_to"(pLft_0, pty_T0, #this, #frozen)
  * types(#lvar_0: Obj, #lvar_1: List) * (#this == {{ #lvar_0, #lvar_1 }})
  * (frozen == #frozen)
  * (this == #this);
guard: <lft>(pLft_0; true);

pred "<&mut LinkedList<T> as gilogic::Ownable>::own"(+pLft_erased, +pty_T0, +self):
  "<LinkedList<T> as gilogic::FrozenOwn<()>>::mut_ref_own_frozen"(pLft_erased, pty_T0, #self, {{  }})
  * types(#lvar_0: Obj, #lvar_1: List) * (#self == {{ #lvar_0, #lvar_1 }})
  * (self == #self);


pred "<std::option::Option<T> as gilogic::Ownable>::own"(+pty_T0, +self):
  (#self == {{ 0i, {{  }} }}) * (self == #self), (#self == {{ 1i, {{ #ax }} }})
  * "<T as gilogic::Ownable>::own"(pty_T0, #ax)
  * (self == #self);


pred "<() as gilogic::Ownable>::own"(+self):
  (#self == {{  }}) * (self == #self);


pred "<std::option::Option<&mut T> as gilogic::Ownable>::own"(+pLft_erased, +pty_T0, +self):
  (#self == {{ 0i, {{  }} }}) * (self == #self), (#self == {{ 1i, {{ #ax }} }})
  * "<&mut T as gilogic::Ownable>::own"(pLft_erased, pty_T0, #ax)
  * (self == #self);


pred "<T as gilogic::FrozenOwn<()>>::frozen_own"(+pty_T0, +this, frozen):
  "<T as gilogic::Ownable>::own"(pty_T0, #this) * (#frozen == {{  }})
  * (frozen == #frozen)
  * (this == #this);


pred "<T as gilogic::FrozenOwn<()>>::mut_ref_own_frozen"(+pLft_0, +pty_T0, +this, frozen):
  "<T as gilogic::FrozenOwn<()>>::just_ref_mut_points_to"(pLft_0, pty_T0, #this, #frozen)
  * types(#lvar_0: Obj, #lvar_1: List) * (#this == {{ #lvar_0, #lvar_1 }})
  * (frozen == #frozen)
  * (this == #this);
guard: <lft>(pLft_0; true);

pred "<LinkedList<T> as gilogic::FrozenOwn<()>>::mut_ref_own_frozen"(+pLft_0, +pty_T0, +this, frozen):
  "<LinkedList<T> as gilogic::FrozenOwn<()>>::just_ref_mut_points_to"(pLft_0, pty_T0, #this, #frozen)
  * types(#lvar_0: Obj, #lvar_1: List) * (#this == {{ #lvar_0, #lvar_1 }})
  * (frozen == #frozen)
  * (this == #this);
guard: <lft>(pLft_0; true);

pred "<LinkedList<T> as gilogic::FrozenOwn<()>>::just_ref_mut_points_to"(+pLft_0, +pty_T0, +this, frozen):
  <value>(l-nth(#this, 0i), l-nth(#this, 1i), {{ "adt", "LinkedList", {{ pty_T0 }} }}; #v)
  * "<LinkedList<T> as gilogic::FrozenOwn<()>>::frozen_own"(pty_T0, #v, #frozen)
  * types(#lvar_0: Obj, #lvar_1: List) * (#this == {{ #lvar_0, #lvar_1 }})
  * (frozen == #frozen)
  * (this == #this);


pred "<LinkedList<T> as gilogic::FrozenOwn<()>>::frozen_own"(+pty_T0, +this, frozen):
  "<LinkedList<T> as gilogic::Ownable>::own"(pty_T0, #this)
  * (#frozen == {{  }})
  * (frozen == #frozen)
  * (this == #this);


lemma "extract_head___proof::<T>"(pLft_erased, pty_T0, list, head, tail, len, p)[[
  (#head == {{ 1i, {{ #p }} }})
  * "<LinkedList<T> as gilogic::FrozenOwn<(std::option::Option<std::ptr::NonNull<Node<T>>>, std::option::Option<std::ptr::NonNull<Node<T>>>, usize)>>::just_ref_mut_points_to"(#pLft_erased, #pty_T0, #list, {{ #head, #tail, #len }})
]]
[[
  "<T as gilogic::FrozenOwn<()>>::just_ref_mut_points_to"(#pLft_erased, #pty_T0, {{ l-nth(l-nth(#p, 0i), 0i), l+(l-nth(l-nth(#p, 0i), 1i), {{ {{ "f", 2i, {{ "adt", "Node", {{ #pty_T0 }} }} }} }}) }}, {{  }})
  * ("<T as gilogic::FrozenOwn<()>>::just_ref_mut_points_to"(#pLft_erased, #pty_T0, {{ l-nth(l-nth(#p, 0i), 0i), l+(l-nth(l-nth(#p, 0i), 1i), {{ {{ "f", 2i, {{ "adt", "Node", {{ #pty_T0 }} }} }} }}) }}, {{  }})
    -* "<LinkedList<T> as gilogic::FrozenOwn<(std::option::Option<std::ptr::NonNull<Node<T>>>, std::option::Option<std::ptr::NonNull<Node<T>>>, usize)>>::just_ref_mut_points_to"(#pLft_erased, #pty_T0, #list, {{ #head, #tail, #len }}))
]][*
package (
  "<T as gilogic::FrozenOwn<()>>::just_ref_mut_points_to"(#pLft_erased, #pty_T0, {{ l-nth(l-nth(#p, 0i), 0i), l+(l-nth(l-nth(#p, 0i), 1i), {{ {{ "f", 2i, {{ "adt", "Node", {{ #pty_T0 }} }} }} }}) }}, {{  }})
  -*
  "<LinkedList<T> as gilogic::FrozenOwn<(std::option::Option<std::ptr::NonNull<Node<T>>>, std::option::Option<std::ptr::NonNull<Node<T>>>, usize)>>::just_ref_mut_points_to"(#pLft_erased, #pty_T0, #list, {{ #head, #tail, #len }}))
*]

lemma "dll_seg_r_appened_left::<T>"(pty_T0, x, next, tail_next, tail)[[
  (#x == {{ 1i, {{ #ptr }} }})
  * types(#lvar_6: Obj, #lvar_7: List) * ({{ {{ #lvar_6, #lvar_7 }} }} == #ptr)
  * <value>(#lvar_6, #lvar_7, {{ "adt", "Node", {{ #pty_T0 }} }}; {{ #next, #prev, #element }})
  * "<T as gilogic::Ownable>::own"(#pty_T0, #element)
  * "dll_seg_r::<T>"(#pty_T0, #next, #tail_next, #tail, #x, #len)
  * types(#len: Int)
  * types(#lvar_8: Obj, #lvar_9: List) * (#ptr == {{ {{ #lvar_8, #lvar_9 }} }})
  * (tail == #tail)
  * (tail_next == #tail_next)
  * (next == #next)
  * (x == #x)
  * (pty_T0 == #pty_T0)
]]
[[ "dll_seg_r::<T>"(#pty_T0, #x, #tail_next, #tail, #prev, ((#len) i+ (1i))) ]]

lemma "dll_seg_l_to_r::<T>"(pty_T0, head, tail_next, tail, head_prev)[[
  "dll_seg::<T>"(#pty_T0, #head, #tail_next, #tail, #head_prev, #len)
]]
[[
  "dll_seg_r::<T>"(#pty_T0, #head, #tail_next, #tail, #head_prev, #len)
]][*
unfold "dll_seg::<T>"(#pty_T0, #head, #tail_next, #tail, #head_prev, #len);
if (((#len) = (0i))) then { fold "dll_seg_r::<T>"(#pty_T0, #head, #tail_next, #tail, #head_prev, #len) } else { sep_assert ((#head == {{ 1i, {{ #hptr }} }})
  * types(#lvar_0: Obj, #lvar_1: List) * ({{ {{ #lvar_0, #lvar_1 }} }} == #hptr)
  * <value>(#lvar_0, #lvar_1, {{ "adt", "Node", {{ #pty_T0 }} }}; {{ #head_next, #head_prev, #element }})) [bind: #hptr, #head_next, #head_prev, #element];
apply "dll_seg_l_to_r::<T>"(#pty_T0, #head_next, #tail_next, #tail, #head);
apply "dll_seg_r_append_left::<T>"(#pty_T0, #head, #head_next, #tail_next, #tail) }
*]

lemma "dll_seg_r_append_left::<T>"(pty_T0, x, next, tail_next, tail)[[
  (#x == {{ 1i, {{ #ptr }} }})
  * types(#lvar_6: Obj, #lvar_7: List) * ({{ {{ #lvar_6, #lvar_7 }} }} == #ptr)
  * <value>(#lvar_6, #lvar_7, {{ "adt", "Node", {{ #pty_T0 }} }}; {{ #next, #prev, #element }})
  * "<T as gilogic::Ownable>::own"(#pty_T0, #element)
  * "dll_seg_r::<T>"(#pty_T0, #next, #tail_next, #tail, #x, #len)
]]
[[
  "dll_seg_r::<T>"(#pty_T0, #x, #tail_next, #tail, #prev, ((#len) i+ (1i)))
]][*
unfold "dll_seg_r::<T>"(#pty_T0, #next, #tail_next, #tail, #x, #len);
if (((#len) = (0i))) then { fold "dll_seg_r::<T>"(#pty_T0, #x, #tail_next, #tail, #prev, ((#len) i+ (1i))) } else { sep_assert ((#tail == {{ 1i, {{ #tptr }} }})
  * types(#lvar_2: Obj, #lvar_3: List) * ({{ {{ #lvar_2, #lvar_3 }} }} == #tptr)
  * <value>(#lvar_2, #lvar_3, {{ "adt", "Node", {{ #pty_T0 }} }}; {{ #tail_next, #tail_prev, #ep }})) [bind: #tptr, #tail_prev, #ep];
apply "dll_seg_r_append_left::<T>"(#pty_T0, #x, #next, #tail, #tail_prev);
fold "dll_seg_r::<T>"(#pty_T0, #x, #tail_next, #tail, #prev, ((#len) i+ (1i))) }
*]

lemma "dll_seg_append_right::<T>"(pty_T0, head, tail_next, tail, head_prev)[[
  "dll_seg::<T>"(#pty_T0, #head, #tail_next, #tail, #head_prev, #len)
  * (#tail_next == {{ 1i, {{ #ptr }} }})
  * types(#lvar_6: Obj, #lvar_7: List) * ({{ {{ #lvar_6, #lvar_7 }} }} == #ptr)
  * <value>(#lvar_6, #lvar_7, {{ "adt", "Node", {{ #pty_T0 }} }}; {{ #next, #tail, #element }})
  * "<T as gilogic::Ownable>::own"(#pty_T0, #element)
]]
[[
  "dll_seg::<T>"(#pty_T0, #head, #next, #tail_next, #head_prev, ((#len) i+ (1i)))
]][*
unfold "dll_seg::<T>"(#pty_T0, #head, #tail_next, #tail, #head_prev, #len);
if (((#len) = (0i))) then { fold "dll_seg::<T>"(#pty_T0, #head, #next, #tail_next, #head_prev, ((#len) i+ (1i))) } else { sep_assert ((#head == {{ 1i, {{ #hptr }} }})
  * types(#lvar_2: Obj, #lvar_3: List) * ({{ {{ #lvar_2, #lvar_3 }} }} == #hptr)
  * <value>(#lvar_2, #lvar_3, {{ "adt", "Node", {{ #pty_T0 }} }}; {{ #head_next, #head_prev, #ep }})) [bind: #hptr, #head_next, #ep];
apply "dll_seg_append_right::<T>"(#pty_T0, #head_next, #tail_next, #tail, #head);
fold "dll_seg::<T>"(#pty_T0, #head, #next, #tail_next, #head_prev, ((#len) i+ (1i))) }
*]

lemma "dll_seg_r_to_l::<T>"(pty_T0, head, tail_next, tail, head_prev)[[
  "dll_seg_r::<T>"(#pty_T0, #head, #tail_next, #tail, #head_prev, #len)
]]
[[
  "dll_seg::<T>"(#pty_T0, #head, #tail_next, #tail, #head_prev, #len)
]][*
unfold "dll_seg_r::<T>"(#pty_T0, #head, #tail_next, #tail, #head_prev, #len);
if (((#len) = (0i))) then { fold "dll_seg::<T>"(#pty_T0, #head, #tail_next, #tail, #head_prev, #len) } else { sep_assert ((#tail == {{ 1i, {{ #tptr }} }})
  * types(#lvar_0: Obj, #lvar_1: List) * ({{ {{ #lvar_0, #lvar_1 }} }} == #tptr)
  * <value>(#lvar_0, #lvar_1, {{ "adt", "Node", {{ #pty_T0 }} }}; {{ #tail_next, #tail_prev, #ep }})) [bind: #tptr, #tail_prev, #ep];
apply "dll_seg_r_to_l::<T>"(#pty_T0, #head, #tail, #tail_prev, #head_prev);
apply "dll_seg_append_right::<T>"(#pty_T0, #head, #tail, #tail_prev, #head_prev) }
*]

proc "Node::<T>::new"(pty_T0, element) {
        m_1element := element;
  bb0:  m_2 := {{ 0i, {{  }} }};
        m_3 := {{ 0i, {{  }} }};
        g_0 := m_1element;
        m_4 := g_0;
        g_1 := m_2;
        g_2 := m_3;
        g_3 := m_4;
        m_0 := {{ g_1, g_2, g_3 }};
        goto bb1;
  bb1:  goto bb2;
  bb2:  g_4 := m_0;
        ret := g_4;
        goto rlab;
  rlab: return
};

proc "Node::<T>::into_element"(pty_T0, self) {
        m_1self := self;
        g_0 := m_1self;
        m_1self := [alloc]({{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }});
        u := [store_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }}, g_0);
  bb0:  g_2 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }}, true);
        g_1 := l-nth(g_2, 0i);
        g_4 := [load_value](l-nth(l-nth(l-nth(l-nth(g_1, 0i), 0i), 0i), 0i), l+(l-nth(l-nth(l-nth(l-nth(g_1, 0i), 0i), 0i), 1i), {{ {{ "f", 2i, {{ "adt", "Node", {{ pty_T0 }} }} }} }}), pty_T0, false);
        g_3 := l-nth(g_4, 0i);
        m_0 := g_3;
        goto bb1;
  bb1:  g_5 := m_0;
        ret := g_5;
        goto rlab;
  rlab: u := [free](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }});
        return
};

proc freeze_htl(pLft_a, pty_T0, x) {
        m_1x := x;
        g_0 := m_1x;
        m_1x := [alloc]({{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }});
        u := [store_value](l-nth(m_1x, 0i), l-nth(m_1x, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, g_0);
  bb0:  g_2 := [load_value](l-nth(m_1x, 0i), l-nth(m_1x, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_1 := l-nth(g_2, 0i);
        g_3 := [new_lft]();
        pLft_5 := l-nth(g_3, 0i);
        m_2 := g_1;
        g_4 := m_2;
        g_5 := "gilogic::ownable::freeze_params::<(std::option::Option<std::ptr::NonNull<Node<T>>>, std::option::Option<std::ptr::NonNull<Node<T>>>, usize), LinkedList<T>>"(pLft_a, pty_T0, g_4);
        m_0 := g_5;
        goto bb1;
  bb1:  g_6 := m_0;
        ret := g_6;
        goto rlab;
  rlab: u := [free](l-nth(m_1x, 0i), l-nth(m_1x, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }});
        return
};

spec "LinkedList::<T>::new"(pty_T0)
[[ (pty_T0 == #pty_T0) ]]
[[ "<LinkedList<T> as gilogic::Ownable>::own"(#pty_T0, ret) ]]
normal

proc "LinkedList::<T>::new"(pty_T0) {
  bb0:  m_1 := {{ 0i, {{  }} }};
        m_2 := {{ 0i, {{  }} }};
        m_3 := {{  }};
        g_0 := m_1;
        g_1 := m_2;
        g_2 := m_3;
        m_0 := {{ g_0, g_1, 0i, g_2 }};
        g_3 := m_0;
        ret := g_3;
        goto rlab;
  rlab: return
};

proc "LinkedList::<T>::push_back_node"(pLft_0, pty_T0, self, node) {
        m_1self := self;
        g_0 := m_1self;
        m_1self := [alloc]({{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }});
        u := [store_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, g_0);
        m_2node := node;
        g_1 := m_2node;
        m_2node := [alloc]({{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }});
        u := [store_value](l-nth(m_2node, 0i), l-nth(m_2node, 1i), {{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }}, g_1);
        m_8 := [alloc]({{ "ref", true, {{ "adt", "Node", {{ pty_T0 }} }} }});
        m_15 := [alloc]({{ "ptr", true, {{ "adt", "Node", {{ pty_T0 }} }} }});
        m_18 := [alloc]({{ "tuple", {{ "usize", "bool" }} }});
  bb0:  m_3 := {{ 0i, {{  }} }};
        g_2 := m_3;
        g_4 := [load_value](l-nth(m_2node, 0i), l-nth(m_2node, 1i), {{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }}, true);
        g_3 := l-nth(g_4, 0i);
        u := [store_value](l-nth(l-nth(l-nth(l-nth(g_3, 0i), 0i), 0i), 0i), l+(l-nth(l-nth(l-nth(l-nth(g_3, 0i), 0i), 0i), 1i), {{ {{ "f", 0i, {{ "adt", "Node", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, g_2);
        g_6 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_5 := l-nth(g_6, 0i);
        g_8 := [load_value](l-nth(g_5, 0i), l+(l-nth(g_5, 1i), {{ {{ "f", 1i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, true);
        g_7 := l-nth(g_8, 0i);
        m_4 := g_7;
        g_9 := m_4;
        g_11 := [load_value](l-nth(m_2node, 0i), l-nth(m_2node, 1i), {{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }}, true);
        g_10 := l-nth(g_11, 0i);
        u := [store_value](l-nth(l-nth(l-nth(l-nth(g_10, 0i), 0i), 0i), 0i), l+(l-nth(l-nth(l-nth(l-nth(g_10, 0i), 0i), 0i), 1i), {{ {{ "f", 1i, {{ "adt", "Node", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, g_9);
        g_13 := [load_value](l-nth(m_2node, 0i), l-nth(m_2node, 1i), {{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }}, false);
        g_12 := l-nth(g_13, 0i);
        m_9 := g_12;
        g_14 := [new_lft]();
        pLft_8 := l-nth(g_14, 0i);
        g_15 := m_9;
        g_16 := "std::boxed::Box::<T, A>::leak"(pLft_8, {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }}, g_15);
        u := [store_value](l-nth(m_8, 0i), l-nth(m_8, 1i), {{ "ref", true, {{ "adt", "Node", {{ pty_T0 }} }} }}, g_16);
        goto bb1;
  bb1:  g_18 := [load_value](l-nth(m_8, 0i), l-nth(m_8, 1i), {{ "ref", true, {{ "adt", "Node", {{ pty_T0 }} }} }}, true);
        g_17 := l-nth(g_18, 0i);
        g_19 := [new_lft]();
        pLft_7 := l-nth(g_19, 0i);
        m_7 := g_17;
        g_20 := m_7;
        g_21 := "<&mut T std::convert::Into<U>>::into"(pLft_8, {{ "ref", true, {{ "adt", "Node", {{ pty_T0 }} }} }}, {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }}, g_20);
        m_6 := g_21;
        goto bb2;
  bb2:  g_22 := m_6;
        m_5node := {{ 1i, {{ g_22 }} }};
        g_24 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_23 := l-nth(g_24, 0i);
        g_26 := [load_discr](l-nth(g_23, 0i), l+(l-nth(g_23, 1i), {{ {{ "f", 1i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }});
        g_25 := l-nth(g_26, 0i);
        m_11 := g_25;
        g_27 := m_11;
        goto [((g_27) = (0i))] bb4 sw0;
  sw0:  goto [((g_27) = (1i))] bb5 sw1;
  sw1:  goto bb3;
  bb3:  fail [Unreachable]();
  bb4:  goto bb6;
  bb5:  g_29 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_28 := l-nth(g_29, 0i);
        g_31 := [load_value](l-nth(g_28, 0i), l+(l-nth(g_28, 1i), {{ {{ "f", 1i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, {{ "vf", 0i, {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, 1i }} }}), {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }}, true);
        g_30 := l-nth(g_31, 0i);
        m_13tail := g_30;
        m_14 := m_5node;
        m_16 := m_13tail;
        g_32 := m_16;
        g_33 := "std::ptr::NonNull::<T>::as_ptr"({{ "adt", "Node", {{ pty_T0 }} }}, g_32);
        u := [store_value](l-nth(m_15, 0i), l-nth(m_15, 1i), {{ "ptr", true, {{ "adt", "Node", {{ pty_T0 }} }} }}, g_33);
        goto bb7;
  bb6:  m_12 := m_5node;
        g_34 := m_12;
        g_36 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_35 := l-nth(g_36, 0i);
        u := [store_value](l-nth(g_35, 0i), l+(l-nth(g_35, 1i), {{ {{ "f", 0i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, g_34);
        m_10 := {{}};
        goto bb8;
  bb7:  g_37 := m_14;
        g_39 := [load_value](l-nth(m_15, 0i), l-nth(m_15, 1i), {{ "ptr", true, {{ "adt", "Node", {{ pty_T0 }} }} }}, true);
        g_38 := l-nth(g_39, 0i);
        u := [store_value](l-nth(g_38, 0i), l+(l-nth(g_38, 1i), {{ {{ "f", 0i, {{ "adt", "Node", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, g_37);
        m_10 := {{}};
        goto bb8;
  bb8:  m_17 := m_5node;
        g_40 := m_17;
        g_42 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_41 := l-nth(g_42, 0i);
        u := [store_value](l-nth(g_41, 0i), l+(l-nth(g_41, 1i), {{ {{ "f", 1i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, g_40);
        g_44 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_43 := l-nth(g_44, 0i);
        g_46 := [load_value](l-nth(g_43, 0i), l+(l-nth(g_43, 1i), {{ {{ "f", 2i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), "usize", true);
        g_45 := l-nth(g_46, 0i);
        g_47 := "i__binop_checked_add"(g_45, 1i, 18446744073709551615i);
        u := [store_value](l-nth(m_18, 0i), l-nth(m_18, 1i), {{ "tuple", {{ "usize", "bool" }} }}, g_47);
        g_49 := [load_value](l-nth(m_18, 0i), l+(l-nth(m_18, 1i), {{ {{ "f", 1i, {{ "tuple", {{ "usize", "bool" }} }} }} }}), "bool", false);
        g_48 := l-nth(g_49, 0i);
        u := "i__lang_assert"(not g_48, "overflow check failed");
        goto bb9;
  bb9:  g_51 := [load_value](l-nth(m_18, 0i), l+(l-nth(m_18, 1i), {{ {{ "f", 0i, {{ "tuple", {{ "usize", "bool" }} }} }} }}), "usize", false);
        g_50 := l-nth(g_51, 0i);
        g_53 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_52 := l-nth(g_53, 0i);
        u := [store_value](l-nth(g_52, 0i), l+(l-nth(g_52, 1i), {{ {{ "f", 2i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), "usize", g_50);
        m_0 := {{}};
        goto bb10;
  bb10: g_54 := m_0;
        ret := g_54;
        goto rlab;
  rlab: u := [free](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }});
        u := [free](l-nth(m_2node, 0i), l-nth(m_2node, 1i), {{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }});
        u := [free](l-nth(m_8, 0i), l-nth(m_8, 1i), {{ "ref", true, {{ "adt", "Node", {{ pty_T0 }} }} }});
        u := [free](l-nth(m_15, 0i), l-nth(m_15, 1i), {{ "ptr", true, {{ "adt", "Node", {{ pty_T0 }} }} }});
        u := [free](l-nth(m_18, 0i), l-nth(m_18, 1i), {{ "tuple", {{ "usize", "bool" }} }});
        return
};

proc "LinkedList::<T>::pop_back_node"(pLft_0, pty_T0, self) {
        m_1self := self;
        g_0 := m_1self;
        m_1self := [alloc]({{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }});
        u := [store_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, g_0);
        m_4node := [alloc]({{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }});
        m_13 := [alloc]({{ "ptr", true, {{ "adt", "Node", {{ pty_T0 }} }} }});
        m_15 := [alloc]({{ "tuple", {{ "usize", "bool" }} }});
  bb0:  g_2 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_1 := l-nth(g_2, 0i);
        g_4 := [load_discr](l-nth(g_1, 0i), l+(l-nth(g_1, 1i), {{ {{ "f", 1i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }});
        g_3 := l-nth(g_4, 0i);
        m_2 := g_3;
        g_5 := m_2;
        goto [((g_5) = (0i))] bb2 sw0;
  sw0:  goto [((g_5) = (1i))] bb3 sw1;
  sw1:  goto bb1;
  bb1:  fail [Unreachable]();
  bb2:  goto bb4;
  bb3:  g_7 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_6 := l-nth(g_7, 0i);
        g_9 := [load_value](l-nth(g_6, 0i), l+(l-nth(g_6, 1i), {{ {{ "f", 1i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, {{ "vf", 0i, {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, 1i }} }}), {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }}, true);
        g_8 := l-nth(g_9, 0i);
        m_3node := g_8;
        m_6 := m_3node;
        g_10 := m_6;
        g_11 := "std::ptr::NonNull::<T>::as_ptr"({{ "adt", "Node", {{ pty_T0 }} }}, g_10);
        m_5 := g_11;
        goto bb5;
  bb4:  m_0 := {{ 0i, {{  }} }};
        goto bb16;
  bb5:  g_12 := m_5;
        g_13 := "std::boxed::Box::<T>::from_raw"({{ "adt", "Node", {{ pty_T0 }} }}, g_12);
        u := [store_value](l-nth(m_4node, 0i), l-nth(m_4node, 1i), {{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }}, g_13);
        goto bb6;
  bb6:  g_15 := [load_value](l-nth(m_4node, 0i), l-nth(m_4node, 1i), {{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }}, true);
        g_14 := l-nth(g_15, 0i);
        g_17 := [load_value](l-nth(l-nth(l-nth(l-nth(g_14, 0i), 0i), 0i), 0i), l+(l-nth(l-nth(l-nth(l-nth(g_14, 0i), 0i), 0i), 1i), {{ {{ "f", 1i, {{ "adt", "Node", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, true);
        g_16 := l-nth(g_17, 0i);
        m_7 := g_16;
        g_18 := m_7;
        g_20 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_19 := l-nth(g_20, 0i);
        u := [store_value](l-nth(g_19, 0i), l+(l-nth(g_19, 1i), {{ {{ "f", 1i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, g_18);
        g_22 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_21 := l-nth(g_22, 0i);
        g_24 := [load_discr](l-nth(g_21, 0i), l+(l-nth(g_21, 1i), {{ {{ "f", 1i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }});
        g_23 := l-nth(g_24, 0i);
        m_9 := g_23;
        g_25 := m_9;
        goto [((g_25) = (0i))] bb8 sw3;
  sw3:  goto [((g_25) = (1i))] bb9 sw4;
  sw4:  goto bb7;
  bb7:  fail [Unreachable]();
  bb8:  goto bb10;
  bb9:  g_27 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_26 := l-nth(g_27, 0i);
        g_29 := [load_value](l-nth(g_26, 0i), l+(l-nth(g_26, 1i), {{ {{ "f", 1i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, {{ "vf", 0i, {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, 1i }} }}), {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }}, true);
        g_28 := l-nth(g_29, 0i);
        m_11tail := g_28;
        m_12 := {{ 0i, {{  }} }};
        m_14 := m_11tail;
        g_30 := m_14;
        g_31 := "std::ptr::NonNull::<T>::as_ptr"({{ "adt", "Node", {{ pty_T0 }} }}, g_30);
        u := [store_value](l-nth(m_13, 0i), l-nth(m_13, 1i), {{ "ptr", true, {{ "adt", "Node", {{ pty_T0 }} }} }}, g_31);
        goto bb11;
  bb10: m_10 := {{ 0i, {{  }} }};
        g_32 := m_10;
        g_34 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_33 := l-nth(g_34, 0i);
        u := [store_value](l-nth(g_33, 0i), l+(l-nth(g_33, 1i), {{ {{ "f", 0i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, g_32);
        m_8 := {{}};
        goto bb12;
  bb11: g_35 := m_12;
        g_37 := [load_value](l-nth(m_13, 0i), l-nth(m_13, 1i), {{ "ptr", true, {{ "adt", "Node", {{ pty_T0 }} }} }}, true);
        g_36 := l-nth(g_37, 0i);
        u := [store_value](l-nth(g_36, 0i), l+(l-nth(g_36, 1i), {{ {{ "f", 0i, {{ "adt", "Node", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, g_35);
        m_8 := {{}};
        goto bb12;
  bb12: g_39 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_38 := l-nth(g_39, 0i);
        g_41 := [load_value](l-nth(g_38, 0i), l+(l-nth(g_38, 1i), {{ {{ "f", 2i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), "usize", true);
        g_40 := l-nth(g_41, 0i);
        g_42 := "i__binop_checked_sub"(g_40, 1i);
        u := [store_value](l-nth(m_15, 0i), l-nth(m_15, 1i), {{ "tuple", {{ "usize", "bool" }} }}, g_42);
        g_44 := [load_value](l-nth(m_15, 0i), l+(l-nth(m_15, 1i), {{ {{ "f", 1i, {{ "tuple", {{ "usize", "bool" }} }} }} }}), "bool", false);
        g_43 := l-nth(g_44, 0i);
        u := "i__lang_assert"(not g_43, "overflow check failed");
        goto bb13;
  bb13: g_46 := [load_value](l-nth(m_15, 0i), l+(l-nth(m_15, 1i), {{ {{ "f", 0i, {{ "tuple", {{ "usize", "bool" }} }} }} }}), "usize", false);
        g_45 := l-nth(g_46, 0i);
        g_48 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_47 := l-nth(g_48, 0i);
        u := [store_value](l-nth(g_47, 0i), l+(l-nth(g_47, 1i), {{ {{ "f", 2i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), "usize", g_45);
        g_50 := [load_value](l-nth(m_4node, 0i), l-nth(m_4node, 1i), {{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }}, false);
        g_49 := l-nth(g_50, 0i);
        m_16 := g_49;
        g_51 := m_16;
        m_0 := {{ 1i, {{ g_51 }} }};
        goto bb14;
  bb14: goto bb15;
  bb15: goto bb16;
  bb16: g_52 := m_0;
        ret := g_52;
        goto rlab;
  rlab: u := [free](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }});
        u := [free](l-nth(m_4node, 0i), l-nth(m_4node, 1i), {{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }});
        u := [free](l-nth(m_13, 0i), l-nth(m_13, 1i), {{ "ptr", true, {{ "adt", "Node", {{ pty_T0 }} }} }});
        u := [free](l-nth(m_15, 0i), l-nth(m_15, 1i), {{ "tuple", {{ "usize", "bool" }} }});
        return
};

proc "LinkedList::<T>::pop_front_node"(pLft_0, pty_T0, self) {
        m_1self := self;
        g_0 := m_1self;
        m_1self := [alloc]({{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }});
        u := [store_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, g_0);
        m_4node := [alloc]({{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }});
        m_13 := [alloc]({{ "ptr", true, {{ "adt", "Node", {{ pty_T0 }} }} }});
        m_15 := [alloc]({{ "tuple", {{ "usize", "bool" }} }});
  bb0:  g_2 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_1 := l-nth(g_2, 0i);
        g_4 := [load_discr](l-nth(g_1, 0i), l+(l-nth(g_1, 1i), {{ {{ "f", 0i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }});
        g_3 := l-nth(g_4, 0i);
        m_2 := g_3;
        g_5 := m_2;
        goto [((g_5) = (0i))] bb2 sw0;
  sw0:  goto [((g_5) = (1i))] bb3 sw1;
  sw1:  goto bb1;
  bb1:  fail [Unreachable]();
  bb2:  goto bb4;
  bb3:  g_7 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_6 := l-nth(g_7, 0i);
        g_9 := [load_value](l-nth(g_6, 0i), l+(l-nth(g_6, 1i), {{ {{ "f", 0i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, {{ "vf", 0i, {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, 1i }} }}), {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }}, true);
        g_8 := l-nth(g_9, 0i);
        m_3node := g_8;
        m_6 := m_3node;
        g_10 := m_6;
        g_11 := "std::ptr::NonNull::<T>::as_ptr"({{ "adt", "Node", {{ pty_T0 }} }}, g_10);
        m_5 := g_11;
        goto bb5;
  bb4:  m_0 := {{ 0i, {{  }} }};
        goto bb16;
  bb5:  g_12 := m_5;
        g_13 := "std::boxed::Box::<T>::from_raw"({{ "adt", "Node", {{ pty_T0 }} }}, g_12);
        u := [store_value](l-nth(m_4node, 0i), l-nth(m_4node, 1i), {{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }}, g_13);
        goto bb6;
  bb6:  g_15 := [load_value](l-nth(m_4node, 0i), l-nth(m_4node, 1i), {{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }}, true);
        g_14 := l-nth(g_15, 0i);
        g_17 := [load_value](l-nth(l-nth(l-nth(l-nth(g_14, 0i), 0i), 0i), 0i), l+(l-nth(l-nth(l-nth(l-nth(g_14, 0i), 0i), 0i), 1i), {{ {{ "f", 0i, {{ "adt", "Node", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, true);
        g_16 := l-nth(g_17, 0i);
        m_7 := g_16;
        g_18 := m_7;
        g_20 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_19 := l-nth(g_20, 0i);
        u := [store_value](l-nth(g_19, 0i), l+(l-nth(g_19, 1i), {{ {{ "f", 0i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, g_18);
        g_22 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_21 := l-nth(g_22, 0i);
        g_24 := [load_discr](l-nth(g_21, 0i), l+(l-nth(g_21, 1i), {{ {{ "f", 0i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }});
        g_23 := l-nth(g_24, 0i);
        m_9 := g_23;
        g_25 := m_9;
        goto [((g_25) = (0i))] bb8 sw3;
  sw3:  goto [((g_25) = (1i))] bb9 sw4;
  sw4:  goto bb7;
  bb7:  fail [Unreachable]();
  bb8:  goto bb10;
  bb9:  g_27 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_26 := l-nth(g_27, 0i);
        g_29 := [load_value](l-nth(g_26, 0i), l+(l-nth(g_26, 1i), {{ {{ "f", 0i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, {{ "vf", 0i, {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, 1i }} }}), {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }}, true);
        g_28 := l-nth(g_29, 0i);
        m_11head := g_28;
        m_12 := {{ 0i, {{  }} }};
        m_14 := m_11head;
        g_30 := m_14;
        g_31 := "std::ptr::NonNull::<T>::as_ptr"({{ "adt", "Node", {{ pty_T0 }} }}, g_30);
        u := [store_value](l-nth(m_13, 0i), l-nth(m_13, 1i), {{ "ptr", true, {{ "adt", "Node", {{ pty_T0 }} }} }}, g_31);
        goto bb11;
  bb10: m_10 := {{ 0i, {{  }} }};
        g_32 := m_10;
        g_34 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_33 := l-nth(g_34, 0i);
        u := [store_value](l-nth(g_33, 0i), l+(l-nth(g_33, 1i), {{ {{ "f", 1i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, g_32);
        m_8 := {{}};
        goto bb12;
  bb11: g_35 := m_12;
        g_37 := [load_value](l-nth(m_13, 0i), l-nth(m_13, 1i), {{ "ptr", true, {{ "adt", "Node", {{ pty_T0 }} }} }}, true);
        g_36 := l-nth(g_37, 0i);
        u := [store_value](l-nth(g_36, 0i), l+(l-nth(g_36, 1i), {{ {{ "f", 1i, {{ "adt", "Node", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, g_35);
        m_8 := {{}};
        goto bb12;
  bb12: g_39 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_38 := l-nth(g_39, 0i);
        g_41 := [load_value](l-nth(g_38, 0i), l+(l-nth(g_38, 1i), {{ {{ "f", 2i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), "usize", true);
        g_40 := l-nth(g_41, 0i);
        g_42 := "i__binop_checked_sub"(g_40, 1i);
        u := [store_value](l-nth(m_15, 0i), l-nth(m_15, 1i), {{ "tuple", {{ "usize", "bool" }} }}, g_42);
        g_44 := [load_value](l-nth(m_15, 0i), l+(l-nth(m_15, 1i), {{ {{ "f", 1i, {{ "tuple", {{ "usize", "bool" }} }} }} }}), "bool", false);
        g_43 := l-nth(g_44, 0i);
        u := "i__lang_assert"(not g_43, "overflow check failed");
        goto bb13;
  bb13: g_46 := [load_value](l-nth(m_15, 0i), l+(l-nth(m_15, 1i), {{ {{ "f", 0i, {{ "tuple", {{ "usize", "bool" }} }} }} }}), "usize", false);
        g_45 := l-nth(g_46, 0i);
        g_48 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_47 := l-nth(g_48, 0i);
        u := [store_value](l-nth(g_47, 0i), l+(l-nth(g_47, 1i), {{ {{ "f", 2i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), "usize", g_45);
        g_50 := [load_value](l-nth(m_4node, 0i), l-nth(m_4node, 1i), {{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }}, false);
        g_49 := l-nth(g_50, 0i);
        m_16 := g_49;
        g_51 := m_16;
        m_0 := {{ 1i, {{ g_51 }} }};
        goto bb14;
  bb14: goto bb15;
  bb15: goto bb16;
  bb16: g_52 := m_0;
        ret := g_52;
        goto rlab;
  rlab: u := [free](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }});
        u := [free](l-nth(m_4node, 0i), l-nth(m_4node, 1i), {{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }});
        u := [free](l-nth(m_13, 0i), l-nth(m_13, 1i), {{ "ptr", true, {{ "adt", "Node", {{ pty_T0 }} }} }});
        u := [free](l-nth(m_15, 0i), l-nth(m_15, 1i), {{ "tuple", {{ "usize", "bool" }} }});
        return
};

spec "LinkedList::<T>::pop_front"(pLft_0, pty_T0, self)
[[ "<&mut LinkedList<T> as gilogic::Ownable>::own"(#pLft_0, #pty_T0, #self)
  * <lft>(#pLft_0; true)
  * types(#lvar_0: Obj, #lvar_1: List) * (#self == {{ #lvar_0, #lvar_1 }})
  * (self == #self)
  * (pty_T0 == #pty_T0)
  * (pLft_0 == #pLft_0) ]]
[[ "<std::option::Option<T> as gilogic::Ownable>::own"(#pty_T0, ret)
  * <lft>(#pLft_0; true) ]]
normal

proc "LinkedList::<T>::pop_front"(pLft_0, pty_T0, self) {
        m_1self := self;
        g_0 := m_1self;
        m_1self := [alloc]({{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }});
        u := [store_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, g_0);
  bb0:  g_2 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_1 := l-nth(g_2, 0i);
        g_3 := [new_lft]();
        pLft_5 := l-nth(g_3, 0i);
        m_3 := g_1;
        g_4 := m_3;
        g_5 := "LinkedList::<T>::pop_front_node"(pLft_0, pty_T0, g_4);
        m_2 := g_5;
        goto bb1;
  bb1:  g_6 := m_2;
        g_7 := "std::option::Option::<T>::map"({{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }}, pty_T0, {{ "fndef", "into_element", {{ pty_T0 }} }}, g_6, "Node::<T>::into_element");
        m_0 := g_7;
        goto bb2;
  bb2:  g_8 := m_0;
        ret := g_8;
        goto rlab;
  rlab: u := [free](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }});
        return
};

proc "LinkedList::<T>::push_front_node"(pLft_0, pty_T0, self, node) {
        m_1self := self;
        g_0 := m_1self;
        m_1self := [alloc]({{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }});
        u := [store_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, g_0);
        m_2node := node;
        g_1 := m_2node;
        m_2node := [alloc]({{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }});
        u := [store_value](l-nth(m_2node, 0i), l-nth(m_2node, 1i), {{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }}, g_1);
        m_8 := [alloc]({{ "ref", true, {{ "adt", "Node", {{ pty_T0 }} }} }});
        m_15 := [alloc]({{ "ptr", true, {{ "adt", "Node", {{ pty_T0 }} }} }});
        m_18 := [alloc]({{ "tuple", {{ "usize", "bool" }} }});
  bb0:  g_3 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_2 := l-nth(g_3, 0i);
        g_5 := [load_value](l-nth(g_2, 0i), l+(l-nth(g_2, 1i), {{ {{ "f", 0i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, true);
        g_4 := l-nth(g_5, 0i);
        m_3 := g_4;
        g_6 := m_3;
        g_8 := [load_value](l-nth(m_2node, 0i), l-nth(m_2node, 1i), {{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }}, true);
        g_7 := l-nth(g_8, 0i);
        u := [store_value](l-nth(l-nth(l-nth(l-nth(g_7, 0i), 0i), 0i), 0i), l+(l-nth(l-nth(l-nth(l-nth(g_7, 0i), 0i), 0i), 1i), {{ {{ "f", 0i, {{ "adt", "Node", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, g_6);
        m_4 := {{ 0i, {{  }} }};
        g_9 := m_4;
        g_11 := [load_value](l-nth(m_2node, 0i), l-nth(m_2node, 1i), {{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }}, true);
        g_10 := l-nth(g_11, 0i);
        u := [store_value](l-nth(l-nth(l-nth(l-nth(g_10, 0i), 0i), 0i), 0i), l+(l-nth(l-nth(l-nth(l-nth(g_10, 0i), 0i), 0i), 1i), {{ {{ "f", 1i, {{ "adt", "Node", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, g_9);
        g_13 := [load_value](l-nth(m_2node, 0i), l-nth(m_2node, 1i), {{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }}, false);
        g_12 := l-nth(g_13, 0i);
        m_9 := g_12;
        g_14 := [new_lft]();
        pLft_8 := l-nth(g_14, 0i);
        g_15 := m_9;
        g_16 := "std::boxed::Box::<T, A>::leak"(pLft_8, {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }}, g_15);
        u := [store_value](l-nth(m_8, 0i), l-nth(m_8, 1i), {{ "ref", true, {{ "adt", "Node", {{ pty_T0 }} }} }}, g_16);
        goto bb1;
  bb1:  g_18 := [load_value](l-nth(m_8, 0i), l-nth(m_8, 1i), {{ "ref", true, {{ "adt", "Node", {{ pty_T0 }} }} }}, true);
        g_17 := l-nth(g_18, 0i);
        g_19 := [new_lft]();
        pLft_7 := l-nth(g_19, 0i);
        m_7 := g_17;
        g_20 := m_7;
        g_21 := "<&mut T std::convert::Into<U>>::into"(pLft_8, {{ "ref", true, {{ "adt", "Node", {{ pty_T0 }} }} }}, {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }}, g_20);
        m_6 := g_21;
        goto bb2;
  bb2:  g_22 := m_6;
        m_5node := {{ 1i, {{ g_22 }} }};
        g_24 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_23 := l-nth(g_24, 0i);
        g_26 := [load_discr](l-nth(g_23, 0i), l+(l-nth(g_23, 1i), {{ {{ "f", 0i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }});
        g_25 := l-nth(g_26, 0i);
        m_11 := g_25;
        g_27 := m_11;
        goto [((g_27) = (0i))] bb4 sw0;
  sw0:  goto [((g_27) = (1i))] bb5 sw1;
  sw1:  goto bb3;
  bb3:  fail [Unreachable]();
  bb4:  goto bb6;
  bb5:  g_29 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_28 := l-nth(g_29, 0i);
        g_31 := [load_value](l-nth(g_28, 0i), l+(l-nth(g_28, 1i), {{ {{ "f", 0i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, {{ "vf", 0i, {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, 1i }} }}), {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }}, true);
        g_30 := l-nth(g_31, 0i);
        m_13head := g_30;
        m_14 := m_5node;
        m_16 := m_13head;
        g_32 := m_16;
        g_33 := "std::ptr::NonNull::<T>::as_ptr"({{ "adt", "Node", {{ pty_T0 }} }}, g_32);
        u := [store_value](l-nth(m_15, 0i), l-nth(m_15, 1i), {{ "ptr", true, {{ "adt", "Node", {{ pty_T0 }} }} }}, g_33);
        goto bb7;
  bb6:  m_12 := m_5node;
        g_34 := m_12;
        g_36 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_35 := l-nth(g_36, 0i);
        u := [store_value](l-nth(g_35, 0i), l+(l-nth(g_35, 1i), {{ {{ "f", 1i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, g_34);
        m_10 := {{}};
        goto bb8;
  bb7:  g_37 := m_14;
        g_39 := [load_value](l-nth(m_15, 0i), l-nth(m_15, 1i), {{ "ptr", true, {{ "adt", "Node", {{ pty_T0 }} }} }}, true);
        g_38 := l-nth(g_39, 0i);
        u := [store_value](l-nth(g_38, 0i), l+(l-nth(g_38, 1i), {{ {{ "f", 1i, {{ "adt", "Node", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, g_37);
        m_10 := {{}};
        goto bb8;
  bb8:  m_17 := m_5node;
        g_40 := m_17;
        g_42 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_41 := l-nth(g_42, 0i);
        u := [store_value](l-nth(g_41, 0i), l+(l-nth(g_41, 1i), {{ {{ "f", 0i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, g_40);
        g_44 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_43 := l-nth(g_44, 0i);
        g_46 := [load_value](l-nth(g_43, 0i), l+(l-nth(g_43, 1i), {{ {{ "f", 2i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), "usize", true);
        g_45 := l-nth(g_46, 0i);
        g_47 := "i__binop_checked_add"(g_45, 1i, 18446744073709551615i);
        u := [store_value](l-nth(m_18, 0i), l-nth(m_18, 1i), {{ "tuple", {{ "usize", "bool" }} }}, g_47);
        g_49 := [load_value](l-nth(m_18, 0i), l+(l-nth(m_18, 1i), {{ {{ "f", 1i, {{ "tuple", {{ "usize", "bool" }} }} }} }}), "bool", false);
        g_48 := l-nth(g_49, 0i);
        u := "i__lang_assert"(not g_48, "overflow check failed");
        goto bb9;
  bb9:  g_51 := [load_value](l-nth(m_18, 0i), l+(l-nth(m_18, 1i), {{ {{ "f", 0i, {{ "tuple", {{ "usize", "bool" }} }} }} }}), "usize", false);
        g_50 := l-nth(g_51, 0i);
        g_53 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_52 := l-nth(g_53, 0i);
        u := [store_value](l-nth(g_52, 0i), l+(l-nth(g_52, 1i), {{ {{ "f", 2i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), "usize", g_50);
        m_0 := {{}};
        goto bb10;
  bb10: g_54 := m_0;
        ret := g_54;
        goto rlab;
  rlab: u := [free](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }});
        u := [free](l-nth(m_2node, 0i), l-nth(m_2node, 1i), {{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }});
        u := [free](l-nth(m_8, 0i), l-nth(m_8, 1i), {{ "ref", true, {{ "adt", "Node", {{ pty_T0 }} }} }});
        u := [free](l-nth(m_15, 0i), l-nth(m_15, 1i), {{ "ptr", true, {{ "adt", "Node", {{ pty_T0 }} }} }});
        u := [free](l-nth(m_18, 0i), l-nth(m_18, 1i), {{ "tuple", {{ "usize", "bool" }} }});
        return
};

spec "LinkedList::<T>::pop_back"(pLft_0, pty_T0, self)
[[ "<&mut LinkedList<T> as gilogic::Ownable>::own"(#pLft_0, #pty_T0, #self)
  * <lft>(#pLft_0; true)
  * types(#lvar_0: Obj, #lvar_1: List) * (#self == {{ #lvar_0, #lvar_1 }})
  * (self == #self)
  * (pty_T0 == #pty_T0)
  * (pLft_0 == #pLft_0) ]]
[[ "<std::option::Option<T> as gilogic::Ownable>::own"(#pty_T0, ret)
  * <lft>(#pLft_0; true) ]]
normal

proc "LinkedList::<T>::pop_back"(pLft_0, pty_T0, self) {
        m_1self := self;
        g_0 := m_1self;
        m_1self := [alloc]({{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }});
        u := [store_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, g_0);
  bb0:  g_2 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_1 := l-nth(g_2, 0i);
        g_4 := [load_value](l-nth(g_1, 0i), l+(l-nth(g_1, 1i), {{ {{ "f", 0i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, true);
        g_3 := l-nth(g_4, 0i);
        m_3 := g_3;
        m_4 := {{ 0i, {{  }} }};
        g_6 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_5 := l-nth(g_6, 0i);
        g_8 := [load_value](l-nth(g_5, 0i), l+(l-nth(g_5, 1i), {{ {{ "f", 1i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, true);
        g_7 := l-nth(g_8, 0i);
        m_5 := g_7;
        m_6 := {{ 0i, {{  }} }};
        g_9 := m_3;
        g_10 := m_4;
        g_11 := m_5;
        g_12 := m_6;
        apply "dll_seg_l_to_r::<T>"(pty_T0, g_9, g_10, g_11, g_12);
        goto bb1;
  bb1:  g_14 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_13 := l-nth(g_14, 0i);
        g_15 := [new_lft]();
        pLft_5 := l-nth(g_15, 0i);
        m_9 := g_13;
        g_16 := m_9;
        g_17 := "LinkedList::<T>::pop_back_node"(pLft_0, pty_T0, g_16);
        m_8 := g_17;
        goto bb2;
  bb2:  g_18 := m_8;
        g_19 := "std::option::Option::<T>::map"({{ "adt", "Box", {{ {{ "adt", "Node", {{ pty_T0 }} }}, {{ "adt", "Global", {{  }} }} }} }}, pty_T0, {{ "fndef", "into_element", {{ pty_T0 }} }}, g_18, "Node::<T>::into_element");
        m_7res := g_19;
        goto bb3;
  bb3:  g_21 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_20 := l-nth(g_21, 0i);
        g_23 := [load_value](l-nth(g_20, 0i), l+(l-nth(g_20, 1i), {{ {{ "f", 0i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, true);
        g_22 := l-nth(g_23, 0i);
        m_11 := g_22;
        m_12 := {{ 0i, {{  }} }};
        g_25 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_24 := l-nth(g_25, 0i);
        g_27 := [load_value](l-nth(g_24, 0i), l+(l-nth(g_24, 1i), {{ {{ "f", 1i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, true);
        g_26 := l-nth(g_27, 0i);
        m_13 := g_26;
        m_14 := {{ 0i, {{  }} }};
        g_28 := m_11;
        g_29 := m_12;
        g_30 := m_13;
        g_31 := m_14;
        apply "dll_seg_r_to_l::<T>"(pty_T0, g_28, g_29, g_30, g_31);
        goto bb4;
  bb4:  g_32 := m_7res;
        m_0 := g_32;
        goto bb5;
  bb5:  g_33 := m_0;
        ret := g_33;
        goto rlab;
  rlab: u := [free](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }});
        return
};

spec "LinkedList::<T>::push_back"(pLft_0, pty_T0, self, elt)
[[ "<&mut LinkedList<T> as gilogic::Ownable>::own"(#pLft_0, #pty_T0, #self)
  * "<T as gilogic::Ownable>::own"(#pty_T0, #elt)
  * <lft>(#pLft_0; true)
  * types(#lvar_0: Obj, #lvar_1: List) * (#self == {{ #lvar_0, #lvar_1 }})
  * (elt == #elt)
  * (self == #self)
  * (pty_T0 == #pty_T0)
  * (pLft_0 == #pLft_0) ]]
[[ "<() as gilogic::Ownable>::own"(ret) * <lft>(#pLft_0; true) ]]
normal

proc "LinkedList::<T>::push_back"(pLft_0, pty_T0, self, elt) {
        m_1self := self;
        g_0 := m_1self;
        m_1self := [alloc]({{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }});
        u := [store_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, g_0);
        m_2elt := elt;
  bb0:  g_2 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_1 := l-nth(g_2, 0i);
        g_4 := [load_value](l-nth(g_1, 0i), l+(l-nth(g_1, 1i), {{ {{ "f", 0i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, true);
        g_3 := l-nth(g_4, 0i);
        m_4 := g_3;
        m_5 := {{ 0i, {{  }} }};
        g_6 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_5 := l-nth(g_6, 0i);
        g_8 := [load_value](l-nth(g_5, 0i), l+(l-nth(g_5, 1i), {{ {{ "f", 1i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, true);
        g_7 := l-nth(g_8, 0i);
        m_6 := g_7;
        m_7 := {{ 0i, {{  }} }};
        g_9 := m_4;
        g_10 := m_5;
        g_11 := m_6;
        g_12 := m_7;
        apply "dll_seg_l_to_r::<T>"(pty_T0, g_9, g_10, g_11, g_12);
        goto bb1;
  bb1:  g_14 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_13 := l-nth(g_14, 0i);
        g_15 := [new_lft]();
        pLft_5 := l-nth(g_15, 0i);
        m_9 := g_13;
        g_16 := m_2elt;
        m_12 := g_16;
        g_17 := m_12;
        g_18 := "Node::<T>::new"(pty_T0, g_17);
        m_11 := g_18;
        goto bb2;
  bb2:  g_19 := m_11;
        g_20 := "std::boxed::Box::<T>::new"({{ "adt", "Node", {{ pty_T0 }} }}, g_19);
        m_10 := g_20;
        goto bb3;
  bb3:  g_21 := m_9;
        g_22 := m_10;
        g_23 := "LinkedList::<T>::push_back_node"(pLft_0, pty_T0, g_21, g_22);
        m_8 := g_23;
        goto bb4;
  bb4:  g_25 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_24 := l-nth(g_25, 0i);
        g_27 := [load_value](l-nth(g_24, 0i), l+(l-nth(g_24, 1i), {{ {{ "f", 0i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, true);
        g_26 := l-nth(g_27, 0i);
        m_14 := g_26;
        m_15 := {{ 0i, {{  }} }};
        g_29 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_28 := l-nth(g_29, 0i);
        g_31 := [load_value](l-nth(g_28, 0i), l+(l-nth(g_28, 1i), {{ {{ "f", 1i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}), {{ "adt", "Option", {{ {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }}, true);
        g_30 := l-nth(g_31, 0i);
        m_16 := g_30;
        m_17 := {{ 0i, {{  }} }};
        g_32 := m_14;
        g_33 := m_15;
        g_34 := m_16;
        g_35 := m_17;
        apply "dll_seg_r_to_l::<T>"(pty_T0, g_32, g_33, g_34, g_35);
        goto bb5;
  bb5:  m_0 := {{}};
        goto bb6;
  bb6:  g_36 := m_0;
        ret := g_36;
        goto rlab;
  rlab: u := [free](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }});
        return
};

spec "LinkedList::<T>::push_front"(pLft_0, pty_T0, self, elt)
[[ "<&mut LinkedList<T> as gilogic::Ownable>::own"(#pLft_0, #pty_T0, #self)
  * "<T as gilogic::Ownable>::own"(#pty_T0, #elt)
  * <lft>(#pLft_0; true)
  * types(#lvar_0: Obj, #lvar_1: List) * (#self == {{ #lvar_0, #lvar_1 }})
  * (elt == #elt)
  * (self == #self)
  * (pty_T0 == #pty_T0)
  * (pLft_0 == #pLft_0) ]]
[[ "<() as gilogic::Ownable>::own"(ret) * <lft>(#pLft_0; true) ]]
normal

proc "LinkedList::<T>::push_front"(pLft_0, pty_T0, self, elt) {
        m_1self := self;
        g_0 := m_1self;
        m_1self := [alloc]({{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }});
        u := [store_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, g_0);
        m_2elt := elt;
  bb0:  g_2 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_1 := l-nth(g_2, 0i);
        g_3 := [new_lft]();
        pLft_5 := l-nth(g_3, 0i);
        m_4 := g_1;
        g_4 := m_2elt;
        m_7 := g_4;
        g_5 := m_7;
        g_6 := "Node::<T>::new"(pty_T0, g_5);
        m_6 := g_6;
        goto bb1;
  bb1:  g_7 := m_6;
        g_8 := "std::boxed::Box::<T>::new"({{ "adt", "Node", {{ pty_T0 }} }}, g_7);
        m_5 := g_8;
        goto bb2;
  bb2:  g_9 := m_4;
        g_10 := m_5;
        g_11 := "LinkedList::<T>::push_front_node"(pLft_0, pty_T0, g_9, g_10);
        m_3 := g_11;
        goto bb3;
  bb3:  m_0 := {{}};
        goto bb4;
  bb4:  g_12 := m_0;
        ret := g_12;
        goto rlab;
  rlab: u := [free](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }});
        return
};

spec "LinkedList::<T>::front_mut"(pLft_0, pty_T0, self)
[[ "<&mut LinkedList<T> as gilogic::Ownable>::own"(#pLft_0, #pty_T0, #self)
  * <lft>(#pLft_0; true)
  * types(#lvar_0: Obj, #lvar_1: List) * (#self == {{ #lvar_0, #lvar_1 }})
  * (self == #self)
  * (pty_T0 == #pty_T0)
  * (pLft_0 == #pLft_0) ]]
[[ "<std::option::Option<&mut T> as gilogic::Ownable>::own"(#pLft_0, #pty_T0, ret)
  * <lft>(#pLft_0; true) ]]
normal

proc "LinkedList::<T>::front_mut"(pLft_0, pty_T0, self) {
        m_1self := self;
        g_0 := m_1self;
        m_1self := [alloc]({{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }});
        u := [store_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, g_0);
        m_4 := [alloc]({{ "adt", "Option", {{ {{ "ref", true, {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }} }});
        m_7node := [alloc]({{ "ref", true, {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }});
        m_10 := [alloc]({{ "ref", true, {{ "adt", "Node", {{ pty_T0 }} }} }});
  bb0:  g_2 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_1 := l-nth(g_2, 0i);
        g_3 := [new_lft]();
        pLft_14 := l-nth(g_3, 0i);
        m_3 := g_1;
        g_4 := m_3;
        g_5 := "freeze_htl"(pLft_0, pty_T0, g_4);
        m_2 := g_5;
        goto bb1;
  bb1:  g_7 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_6 := l-nth(g_7, 0i);
        g_8 := [new_lft]();
        pLft_16 := l-nth(g_8, 0i);
        m_5 := {{ l-nth(g_6, 0i), l+(l-nth(g_6, 1i), {{ {{ "f", 0i, {{ "adt", "LinkedList", {{ pty_T0 }} }} }} }}) }};
        g_9 := m_5;
        g_10 := "std::option::Option::<T>::as_mut"(pLft_16, {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }}, g_9);
        u := [store_value](l-nth(m_4, 0i), l-nth(m_4, 1i), {{ "adt", "Option", {{ {{ "ref", true, {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }} }}, g_10);
        goto bb2;
  bb2:  g_12 := [load_discr](l-nth(m_4, 0i), l-nth(m_4, 1i), {{ "adt", "Option", {{ {{ "ref", true, {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }} }});
        g_11 := l-nth(g_12, 0i);
        m_6 := g_11;
        g_13 := m_6;
        goto [((g_13) = (0i))] bb4 sw0;
  sw0:  goto [((g_13) = (1i))] bb5 sw1;
  sw1:  goto bb3;
  bb3:  fail [Unreachable]();
  bb4:  goto bb6;
  bb5:  g_15 := [load_value](l-nth(m_4, 0i), l+(l-nth(m_4, 1i), {{ {{ "vf", 0i, {{ "adt", "Option", {{ {{ "ref", true, {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }} }}, 1i }} }}), {{ "ref", true, {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }}, false);
        g_14 := l-nth(g_15, 0i);
        g_16 := [new_lft]();
        pLft_17 := l-nth(g_16, 0i);
        u := [store_value](l-nth(m_7node, 0i), l-nth(m_7node, 1i), {{ "ref", true, {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }}, g_14);
        g_18 := [load_value](l-nth(m_7node, 0i), l-nth(m_7node, 1i), {{ "ref", true, {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }}, true);
        g_17 := l-nth(g_18, 0i);
        g_19 := [new_lft]();
        pLft_21 := l-nth(g_19, 0i);
        m_11 := g_17;
        g_20 := [new_lft]();
        pLft_20 := l-nth(g_20, 0i);
        g_21 := m_11;
        g_22 := "std::ptr::NonNull::<T>::as_mut"(pLft_17, pLft_20, {{ "adt", "Node", {{ pty_T0 }} }}, g_21);
        u := [store_value](l-nth(m_10, 0i), l-nth(m_10, 1i), {{ "ref", true, {{ "adt", "Node", {{ pty_T0 }} }} }}, g_22);
        goto bb7;
  bb6:  m_0 := {{ 0i, {{  }} }};
        goto bb9;
  bb7:  g_24 := [load_value](l-nth(m_10, 0i), l-nth(m_10, 1i), {{ "ref", true, {{ "adt", "Node", {{ pty_T0 }} }} }}, true);
        g_23 := l-nth(g_24, 0i);
        g_25 := [new_lft]();
        pLft_19 := l-nth(g_25, 0i);
        m_9 := {{ l-nth(g_23, 0i), l+(l-nth(g_23, 1i), {{ {{ "f", 2i, {{ "adt", "Node", {{ pty_T0 }} }} }} }}) }};
        g_26 := m_9;
        m_8ret := {{ 1i, {{ g_26 }} }};
        g_28 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }}, true);
        g_27 := l-nth(g_28, 0i);
        g_29 := [new_lft]();
        pLft_22 := l-nth(g_29, 0i);
        m_13 := g_27;
        g_30 := m_13;
        g_31 := "extract_head::<T>"(pLft_0, pty_T0, g_30);
        m_12 := g_31;
        goto bb8;
  bb8:  g_32 := m_8ret;
        m_0 := g_32;
        goto bb9;
  bb9:  g_33 := m_0;
        ret := g_33;
        goto rlab;
  rlab: u := [free](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "LinkedList", {{ pty_T0 }} }} }});
        u := [free](l-nth(m_4, 0i), l-nth(m_4, 1i), {{ "adt", "Option", {{ {{ "ref", true, {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }} }} }});
        u := [free](l-nth(m_7node, 0i), l-nth(m_7node, 1i), {{ "ref", true, {{ "adt", "NonNull", {{ {{ "adt", "Node", {{ pty_T0 }} }} }} }} }});
        u := [free](l-nth(m_10, 0i), l-nth(m_10, 1i), {{ "ref", true, {{ "adt", "Node", {{ pty_T0 }} }} }});
        return
};

