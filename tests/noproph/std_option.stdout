#begin_init_data
{"Option":["Enum",[["None",[]],["Some",[["Param",0]]]]]}
#end_init_data

import "i__binop.gil", "i__lang.gil", "i__std_shims.gil", "i__prophecies.gil", "i__std_shims_no_pcy.gil", "i__lang_no_pcy.gil";

pred "<Option<T> as gilogic::Ownable>::own"(+pty_T0, +self):
  (#self == {{ 0i, {{  }} }}) * (self == #self), (#self == {{ 1i, {{ #x }} }})
  * "<T as gilogic::Ownable>::own"(pty_T0, #x)
  * (self == #self);


abstract pred "<T as gilogic::Ownable>::own"(+pty_T0, +self);


pred "<&mut Option<T> as gilogic::Ownable>::own"(+pLft_erased, +pty_T0, +self):
  "<Option<T> as gilogic::FrozenOwn<()>>::mut_ref_own_frozen"(pLft_erased, pty_T0, #self, {{  }})
  * types(#lvar_0: Obj, #lvar_1: List) * (#self == {{ #lvar_0, #lvar_1 }})
  * (self == #self);


pred "<() as gilogic::Ownable>::own"(+self):
  (#self == {{  }}) * (self == #self);


pred "<Option<T> as gilogic::FrozenOwn<()>>::mut_ref_own_frozen"(+pLft_0, +pty_T0, +this, frozen):
  "<Option<T> as gilogic::FrozenOwn<()>>::just_ref_mut_points_to"(pLft_0, pty_T0, #this, #frozen)
  * types(#lvar_0: Obj, #lvar_1: List) * (#this == {{ #lvar_0, #lvar_1 }})
  * (frozen == #frozen)
  * (this == #this);
guard: <lft>(pLft_0; true);

pred "<Option<T> as gilogic::FrozenOwn<()>>::just_ref_mut_points_to"(+pLft_0, +pty_T0, +this, frozen):
  <value>(l-nth(#this, 0i), l-nth(#this, 1i), {{ "adt", "Option", {{ pty_T0 }} }}; #v)
  * "<Option<T> as gilogic::FrozenOwn<()>>::frozen_own"(pty_T0, #v, #frozen)
  * types(#lvar_0: Obj, #lvar_1: List) * (#this == {{ #lvar_0, #lvar_1 }})
  * (frozen == #frozen)
  * (this == #this);


pred "<Option<T> as gilogic::FrozenOwn<()>>::frozen_own"(+pty_T0, +this, frozen):
  "<Option<T> as gilogic::Ownable>::own"(pty_T0, #this) * (#frozen == {{  }})
  * (frozen == #frozen)
  * (this == #this);


spec "Option::<T>::new"(pty_T0, x)
[[ "<T as gilogic::Ownable>::own"(#pty_T0, #x) * (x == #x)
  * (pty_T0 == #pty_T0) ]]
[[ "<Option<T> as gilogic::Ownable>::own"(#pty_T0, ret) ]]
normal

proc "Option::<T>::new"(pty_T0, x) {
        m_1x := x;
  bb0:  g_0 := m_1x;
        m_2 := g_0;
        g_1 := m_2;
        m_0 := {{ 1i, {{ g_1 }} }};
        goto bb1;
  bb1:  goto bb2;
  bb2:  g_2 := m_0;
        ret := g_2;
        goto rlab;
  rlab: return
};

spec "Option::<T>::put"(pLft_0, pty_T0, self, x)
[[ "<&mut Option<T> as gilogic::Ownable>::own"(#pLft_0, #pty_T0, #self)
  * "<T as gilogic::Ownable>::own"(#pty_T0, #x)
  * <lft>(#pLft_0; true)
  * types(#lvar_0: Obj, #lvar_1: List) * (#self == {{ #lvar_0, #lvar_1 }})
  * (x == #x)
  * (self == #self)
  * (pty_T0 == #pty_T0)
  * (pLft_0 == #pLft_0) ]]
[[ "<() as gilogic::Ownable>::own"(ret) * <lft>(#pLft_0; true) ]]
normal

proc "Option::<T>::put"(pLft_0, pty_T0, self, x) {
        m_1self := self;
        g_0 := m_1self;
        m_1self := [alloc]({{ "ref", true, {{ "adt", "Option", {{ pty_T0 }} }} }});
        u := [store_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "Option", {{ pty_T0 }} }} }}, g_0);
        m_2x := x;
  bb0:  g_1 := m_2x;
        m_4 := g_1;
        g_2 := m_4;
        m_3 := {{ 1i, {{ g_2 }} }};
        goto bb1;
  bb1:  goto bb2;
  bb2:  g_3 := m_3;
        g_5 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "Option", {{ pty_T0 }} }} }}, true);
        g_4 := l-nth(g_5, 0i);
        u := [store_value](l-nth(g_4, 0i), l-nth(g_4, 1i), {{ "adt", "Option", {{ pty_T0 }} }}, g_3);
        m_0 := {{}};
        goto bb4;
  bb4:  goto bb5;
  bb5:  g_6 := m_0;
        ret := g_6;
        goto rlab;
  rlab: u := [free](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "Option", {{ pty_T0 }} }} }});
        return
};

