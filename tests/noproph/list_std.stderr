error: custom attribute panicked
  --> ../tests/noproph/list_std.rs:65:1
   |
65 | / #[extract_lemma(
66 | |     forall head, tail, len, p.
67 | |     assuming { head == Some(p) }
68 | |     from { list_ref_mut_htl(list, head, tail, len) }
69 | |     extract { Ownable::own(&mut (*p.as_ptr()).element) }
70 | | )]
   | |__^
   |
   = help: message: called `Option::unwrap()` on a `None` value

error[E0432]: unresolved import `gilogic::macros::no_prophecies`
 --> ../tests/noproph/list_std.rs:5:14
  |
5 |     macros::{no_prophecies::with_freeze_lemma_for_mutref, *},
  |              ^^^^^^^^^^^^^ could not find `no_prophecies` in `macros`

warning: unused imports: `assert_bind`, `unfold`
 --> ../tests/noproph/list_std.rs:7:5
  |
7 |     assert_bind, unfold,
  |     ^^^^^^^^^^^  ^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

[TIMESTAMP WARN  lib_rtg::metadata] could not read metadata for crate `"std"`: Os { code: 2, kind: NotFound, message: "No such file or directory" }
building predctx DefId(0:34 ~ list_std[c124]::option_box_node) [T/#0]
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _4
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _1
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _1
building predctx DefId(0:38 ~ list_std[c124]::dll_seg) [T/#0]
building predctx DefId(0:42 ~ list_std[c124]::dll_seg_r) [T/#0]
compiling DefId(0:46 ~ list_std[c124]::dll_seg_r_appened_left)
building predctx DefId(0:49 ~ list_std[c124]::dll_seg_r_appened_left::{closure#0}::{closure#0}) [T/#0]
building predctx DefId(0:49 ~ list_std[c124]::dll_seg_r_appened_left::{closure#0}::{closure#0}) [T/#0]
compiling trusted lemma Signature { args: [Generic("pty_T0"), Program("x", std::option::Option<std::ptr::NonNull<Node<T/#0>>>), Program("next", std::option::Option<std::ptr::NonNull<Node<T/#0>>>), Program("tail_next", std::option::Option<std::ptr::NonNull<Node<T/#0>>>), Program("tail", std::option::Option<std::ptr::NonNull<Node<T/#0>>>)], contract: Some(Contract { timeless: false, pre: Star { left: Star { left: Star { left: Pure(Eq { left: LVar("#x"), right: EList([Lit(Int(1)), EList([LVar("#ptr")])]) }), right: Star { left: Star { left: Types([(LVar("#lvar_8"), ObjectType), (LVar("#lvar_9"), ListType)]), right: Pure(Eq { left: EList([EList([LVar("#lvar_8"), LVar("#lvar_9")])]), right: LVar("#ptr") }) }, right: GA { name: "value", ins: [LVar("#lvar_8"), LVar("#lvar_9"), EList([Lit(String("adt")), Lit(String("Node")), EList([PVar("pty_T0")])])], outs: [EList([LVar("#next"), LVar("#prev"), LVar("#element")])] } } }, right: Pred { name: "<T as gilogic::Ownable>::own", params: [PVar("pty_T0"), LVar("#element")] } }, right: Pred { name: "dll_seg_r::<T>", params: [PVar("pty_T0"), LVar("#next"), LVar("#tail_next"), LVar("#tail"), LVar("#x"), LVar("#len")] } }, post: [([], Pred { name: "dll_seg_r::<T>", params: [PVar("pty_T0"), LVar("#x"), LVar("#tail_next"), LVar("#tail"), LVar("#prev"), BinOp { operator: IPlus, left_operand: LVar("#len"), right_operand: Lit(Int(1)) }] })], trusted: false }), temp_gen: TempGenerator { cur_lvar: 10 } }
compiling DefId(0:51 ~ list_std[c124]::dll_seg_l_to_r)
building predctx DefId(0:54 ~ list_std[c124]::dll_seg_l_to_r::{closure#0}::{closure#0}) [T/#0]
building predctx DefId(0:54 ~ list_std[c124]::dll_seg_l_to_r::{closure#0}::{closure#0}) [T/#0]
compiling trusted lemma Signature { args: [Generic("pty_T0"), Program("head", std::option::Option<std::ptr::NonNull<Node<T/#0>>>), Program("tail_next", std::option::Option<std::ptr::NonNull<Node<T/#0>>>), Program("tail", std::option::Option<std::ptr::NonNull<Node<T/#0>>>), Program("head_prev", std::option::Option<std::ptr::NonNull<Node<T/#0>>>)], contract: Some(Contract { timeless: false, pre: Pred { name: "dll_seg::<T>", params: [PVar("pty_T0"), LVar("#head"), LVar("#tail_next"), LVar("#tail"), LVar("#head_prev"), LVar("#len")] }, post: [([], Pred { name: "dll_seg_r::<T>", params: [PVar("pty_T0"), LVar("#head"), LVar("#tail_next"), LVar("#tail"), LVar("#head_prev"), LVar("#len")] })], trusted: false }), temp_gen: TempGenerator { cur_lvar: 10 } }
compiling DefId(0:56 ~ list_std[c124]::dll_seg_r_to_l)
building predctx DefId(0:59 ~ list_std[c124]::dll_seg_r_to_l::{closure#0}::{closure#0}) [T/#0]
building predctx DefId(0:59 ~ list_std[c124]::dll_seg_r_to_l::{closure#0}::{closure#0}) [T/#0]
compiling trusted lemma Signature { args: [Generic("pty_T0"), Program("head", std::option::Option<std::ptr::NonNull<Node<T/#0>>>), Program("tail_next", std::option::Option<std::ptr::NonNull<Node<T/#0>>>), Program("tail", std::option::Option<std::ptr::NonNull<Node<T/#0>>>), Program("head_prev", std::option::Option<std::ptr::NonNull<Node<T/#0>>>)], contract: Some(Contract { timeless: false, pre: Pred { name: "dll_seg_r::<T>", params: [PVar("pty_T0"), LVar("#head"), LVar("#tail_next"), LVar("#tail"), LVar("#head_prev"), LVar("#len")] }, post: [([], Pred { name: "dll_seg::<T>", params: [PVar("pty_T0"), LVar("#head"), LVar("#tail_next"), LVar("#tail"), LVar("#head_prev"), LVar("#len")] })], trusted: false }), temp_gen: TempGenerator { cur_lvar: 10 } }
building predctx DefId(0:87 ~ list_std[c124]::{impl#2}::own) [T/#0]
building predctx DefId(0:61 ~ list_std[c124]::{impl#1}::new_spec_16c4c6ca_32bc_4bbd_b44b_e2f4c0a00db8) [T/#0]
building predctx DefId(0:61 ~ list_std[c124]::{impl#1}::new_spec_16c4c6ca_32bc_4bbd_b44b_e2f4c0a00db8) [T/#0]
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _2
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _16
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _4
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _16
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _4
building predctx DefId(0:65 ~ list_std[c124]::{impl#1}::pop_front_spec_9d3cb2e2_c9c7_40e1_bef9_7569571c2c7a) [T/#0]
building predctx DefId(0:65 ~ list_std[c124]::{impl#1}::pop_front_spec_9d3cb2e2_c9c7_40e1_bef9_7569571c2c7a) [T/#0]
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _2
building predctx DefId(0:69 ~ list_std[c124]::{impl#1}::pop_back_spec_834263e9_adf6_44ee_b846_f0efe693b765) [T/#0]
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _7
building predctx DefId(0:69 ~ list_std[c124]::{impl#1}::pop_back_spec_834263e9_adf6_44ee_b846_f0efe693b765) [T/#0]
building predctx DefId(0:73 ~ list_std[c124]::{impl#1}::push_back_spec_125f9d23_77d9_45d3_9efd_f99871808b87) [T/#0]
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _2
building predctx DefId(0:73 ~ list_std[c124]::{impl#1}::push_back_spec_125f9d23_77d9_45d3_9efd_f99871808b87) [T/#0]
building predctx DefId(0:77 ~ list_std[c124]::{impl#1}::push_front_spec_b608f108_d73b_42f0_8117_f2b2a4f16002) [T/#0]
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _2
building predctx DefId(0:77 ~ list_std[c124]::{impl#1}::push_front_spec_b608f108_d73b_42f0_8117_f2b2a4f16002) [T/#0]
error[E0425]: cannot find function `freeze_htl` in this scope
   --> ../tests/noproph/list_std.rs:284:9
    |
284 |         freeze_htl(self);
    |         ^^^^^^^^^^------
    |         |
    |         help: try calling `freeze_htl` as a method: `self.freeze_htl()`

error[E0425]: cannot find function `extract_head` in this scope
   --> ../tests/noproph/list_std.rs:289:17
    |
289 |                 extract_head(self);
    |                 ^^^^^^^^^^^^------
    |                 |
    |                 help: try calling `extract_head` as a method: `self.extract_head()`

building predctx DefId(0:81 ~ list_std[c124]::{impl#1}::front_mut_spec_5a434793_a9cc_4643_8c50_896fad1adeeb) [T/#0]
building predctx DefId(0:81 ~ list_std[c124]::{impl#1}::front_mut_spec_5a434793_a9cc_4643_8c50_896fad1adeeb) [T/#0]
building predctx DefId(20:189 ~ gilogic[8e9c]::ownable::Ownable::own) [T/#0]
building predctx DefId(20:192 ~ gilogic[8e9c]::ownable::{impl#0}::own) ['{erased}, LinkedList<T/#0>]
building predctx DefId(20:232 ~ gilogic[8e9c]::ownable::{impl#2}::own) [T/#0]
building predctx DefId(20:237 ~ gilogic[8e9c]::ownable::{impl#4}::own) []
building predctx DefId(20:232 ~ gilogic[8e9c]::ownable::{impl#2}::own) [&'{erased} mut T/#0]
building predctx DefId(20:192 ~ gilogic[8e9c]::ownable::{impl#0}::own) ['{erased}, T/#0]
error: aborting due to 4 previous errors; 1 warning emitted

Some errors have detailed explanations: E0425, E0432.
For more information about an error, try `rustc --explain E0425`.
