[TIMESTAMP WARN  lib_rtg::metadata] could not read metadata for crate `"std"`: Os { code: 2, kind: NotFound, message: "No such file or directory" }
warning: unused variable: `p`
  --> ../tests/noproph/wp.rs:71:30
   |
71 | fn extract_x<'a, T: Ownable>(p: &'a mut WP<T>);
   |                              ^ help: if this is intentional, prefix it with an underscore: `_p`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `p`
  --> ../tests/noproph/wp.rs:78:30
   |
78 | fn extract_y<'a, T: Ownable>(p: &'a mut WP<T>);
   |                              ^ help: if this is intentional, prefix it with an underscore: `_p`

warning: fields `x` and `y` are never read
 --> ../tests/noproph/wp.rs:7:5
  |
6 | struct WP<T> {
  |        -- fields in this struct
7 |     x: *mut N<T>,
  |     ^
8 |     y: *mut N<T>,
  |     ^
  |
  = note: `#[warn(dead_code)]` on by default

warning: fields `v` and `o` are never read
  --> ../tests/noproph/wp.rs:12:5
   |
11 | struct N<T> {
   |        - fields in this struct
12 |     v: T,
   |     ^
13 |     o: *mut N<T>,
   |     ^

warning: function `extract_x___proof` should have a snake case name
  --> ../tests/noproph/wp.rs:71:4
   |
71 | fn extract_x<'a, T: Ownable>(p: &'a mut WP<T>);
   |    ^^^^^^^^^ help: convert the identifier to snake case: `extract_x_proof`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: function `extract_y___proof` should have a snake case name
  --> ../tests/noproph/wp.rs:78:4
   |
78 | fn extract_y<'a, T: Ownable>(p: &'a mut WP<T>);
   |    ^^^^^^^^^ help: convert the identifier to snake case: `extract_y_proof`

warning: variable `THIS` should have a snake case name
  --> ../tests/noproph/wp.rs:87:12
   |
87 |     fn own(self) {
   |            ^^^^ help: convert the identifier to snake case: `this`

warning: 7 warnings emitted

[TIMESTAMP DEBUG rust_to_gil] Correct!
