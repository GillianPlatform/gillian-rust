#begin_init_data
{"MyBox":["Struct","ReprRust",[["ptr",["Ptr",{"mut":true,"ty":["Param",0]}]]]]}
#end_init_data

import "i__binop.gil", "i__lang.gil", "i__std_shims.gil", "i__prophecies.gil", "i__std_shims_no_pcy.gil", "i__lang_no_pcy.gil";

pred "<MyBox<T> as gilogic::Ownable>::own"(+pty_T0, +self):
  (#self == {{ #ptr }}) * <value>(l-nth(#ptr, 0i), l-nth(#ptr, 1i), pty_T0; #v)
  * "<T as gilogic::Ownable>::own"(pty_T0, #v)
  * (self == #self);


abstract pred "<T as gilogic::Ownable>::own"(+pty_T0, +self);


pred "<&mut MyBox<T> as gilogic::Ownable>::own"(+pLft_erased, +pty_T0, +self):
  <value>(l-nth(#self, 0i), l-nth(#self, 1i), {{ "adt", "MyBox", {{ pty_T0 }} }}; #v)
  * "<MyBox<T> as gilogic::Ownable>::own"(pty_T0, #v)
  * types(#lvar_0: Obj, #lvar_1: List) * (#self == {{ #lvar_0, #lvar_1 }})
  * (self == #self);
guard: <lft>(pLft_erased; true);

pred "<&mut MyBox<T> as gilogic::Ownable>::own$$inner"(+pty_T0, +self):
  <value>(l-nth(#self, 0i), l-nth(#self, 1i), {{ "adt", "MyBox", {{ pty_T0 }} }}; #v)
  * "<MyBox<T> as gilogic::Ownable>::own"(pty_T0, #v)
  * types(#lvar_0: Obj, #lvar_1: List) * (#self == {{ #lvar_0, #lvar_1 }})
  * (self == #self);


spec "MyBox::<T>::write"(pty_T0, self, v)
[[ "<MyBox<T> as gilogic::Ownable>::own"(#pty_T0, #self) * "<T as gilogic::Ownable>::own"(#pty_T0, #v) * (v == #v) * (self == #self) * (pty_T0 == #pty_T0) ]]
[["<MyBox<T> as gilogic::Ownable>::own"(#pty_T0, ret)]]
normal

proc "MyBox::<T>::write"(pty_T0, self, v) {
        m_1self := self;
        g_0 := m_1self;
        m_1self := [alloc]({{ "adt", "MyBox", {{ pty_T0 }} }});
        u := [store_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "adt", "MyBox", {{ pty_T0 }} }}, g_0);
        m_2v := v;
  bb0:  g_1 := m_2v;
        m_4 := g_1;
        goto bb1;
  bb1:  g_2 := m_4;
        g_4 := [load_value](l-nth(m_1self, 0i), l+ (l-nth(m_1self, 1i), {{ {{ "f", 0i, {{ "adt", "MyBox", {{ pty_T0 }} }} }} }}), {{ "ptr", true, pty_T0 }}, true);
        g_3 := l-nth(g_4, 0i);
        u := [store_value](l-nth(g_3, 0i), l-nth(g_3, 1i), pty_T0, g_2);
        m_3 := {{  }};
        goto bb3;
  bb3:  g_6 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "adt", "MyBox", {{ pty_T0 }} }}, false);
        g_5 := l-nth(g_6, 0i);
        m_0 := g_5;
        goto bb4;
  bb4:  g_7 := m_0;
        ret := g_7;
        goto rlab;
  rlab: u := [free](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "adt", "MyBox", {{ pty_T0 }} }});
        return
};

spec "MyBox::<T>::update"(pLft_0, pty_T0, self, v)
[[ "<&mut MyBox<T> as gilogic::Ownable>::own"(#pLft_0, #pty_T0, #self) * "<T as gilogic::Ownable>::own"(#pty_T0, #v) * <lft>(#pLft_0; true) * types(#lvar_0: Obj, #lvar_1: List) * (#self == {{ #lvar_0, #lvar_1 }}) * (v == #v) * (self == #self) * (pty_T0 == #pty_T0) * (pLft_0 == #pLft_0) ]]
[["<() as gilogic::Ownable>::own"(ret) * <lft>(#pLft_0; true)]]
normal

proc "MyBox::<T>::update"(pLft_0, pty_T0, self, v) {
        m_1self := self;
        g_0 := m_1self;
        m_1self := [alloc]({{ "ref", true, {{ "adt", "MyBox", {{ pty_T0 }} }} }});
        u := [store_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "MyBox", {{ pty_T0 }} }} }}, g_0);
        m_2v := v;
  bb0:  g_1 := m_2v;
        m_4 := g_1;
        goto bb1;
  bb1:  g_2 := m_4;
        g_4 := [load_value](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "MyBox", {{ pty_T0 }} }} }}, true);
        g_3 := l-nth(g_4, 0i);
        g_6 := [load_value](l-nth(g_3, 0i), l+ (l-nth(g_3, 1i), {{ {{ "f", 0i, {{ "adt", "MyBox", {{ pty_T0 }} }} }} }}), {{ "ptr", true, pty_T0 }}, true);
        g_5 := l-nth(g_6, 0i);
        u := [store_value](l-nth(g_5, 0i), l-nth(g_5, 1i), pty_T0, g_2);
        m_3 := {{  }};
        goto bb3;
  bb3:  m_0 := {{  }};
        goto bb4;
  bb4:  g_7 := m_0;
        ret := g_7;
        goto rlab;
  rlab: u := [free](l-nth(m_1self, 0i), l-nth(m_1self, 1i), {{ "ref", true, {{ "adt", "MyBox", {{ pty_T0 }} }} }});
        return
};

