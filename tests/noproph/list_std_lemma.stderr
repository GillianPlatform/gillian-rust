[TIMESTAMP WARN  lib_rtg::metadata] could not read metadata for crate `"std"`: Os { code: 2, kind: NotFound, message: "No such file or directory" }
warning: unused variable: `next`
  --> ../tests/noproph/list_std_lemma.rs:71:5
   |
71 |     next: Option<NonNull<Node<T>>>,
   |     ^^^^ help: if this is intentional, prefix it with an underscore: `_next`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `tptr`
  --> ../tests/noproph/list_std_lemma.rs:79:22
   |
79 |         assert_bind!(tptr, tail_prev, ep |
   |                      ^^^^ help: if this is intentional, prefix it with an underscore: `_tptr`

warning: unused variable: `ep`
  --> ../tests/noproph/list_std_lemma.rs:79:39
   |
79 |         assert_bind!(tptr, tail_prev, ep |
   |                                       ^^ help: if this is intentional, prefix it with an underscore: `_ep`

warning: unused variable: `hptr`
   --> ../tests/noproph/list_std_lemma.rs:109:22
    |
109 |         assert_bind!(hptr, head_next, ep|
    |                      ^^^^ help: if this is intentional, prefix it with an underscore: `_hptr`

warning: unused variable: `ep`
   --> ../tests/noproph/list_std_lemma.rs:109:39
    |
109 |         assert_bind!(hptr, head_next, ep|
    |                                       ^^ help: if this is intentional, prefix it with an underscore: `_ep`

warning: unused variable: `hptr`
   --> ../tests/noproph/list_std_lemma.rs:138:22
    |
138 |         assert_bind!(hptr, head_next, head_prev, element |
    |                      ^^^^ help: if this is intentional, prefix it with an underscore: `_hptr`

warning: unused variable: `head_prev`
   --> ../tests/noproph/list_std_lemma.rs:138:39
    |
138 |         assert_bind!(hptr, head_next, head_prev, element |
    |                                       ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_head_prev`

warning: unused variable: `element`
   --> ../tests/noproph/list_std_lemma.rs:138:50
    |
138 |         assert_bind!(hptr, head_next, head_prev, element |
    |                                                  ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_element`

warning: unused variable: `tptr`
   --> ../tests/noproph/list_std_lemma.rs:167:22
    |
167 |         assert_bind!(tptr, tail_prev, ep |
    |                      ^^^^ help: if this is intentional, prefix it with an underscore: `_tptr`

warning: unused variable: `ep`
   --> ../tests/noproph/list_std_lemma.rs:167:39
    |
167 |         assert_bind!(tptr, tail_prev, ep |
    |                                       ^^ help: if this is intentional, prefix it with an underscore: `_ep`

warning: fields `head`, `tail`, and `len` are never read
  --> ../tests/noproph/list_std_lemma.rs:10:5
   |
9  | pub struct LinkedList<T> {
   |            ---------- fields in this struct
10 |     head: Option<NonNull<Node<T>>>,
   |     ^^^^
11 |     tail: Option<NonNull<Node<T>>>,
   |     ^^^^
12 |     len: usize,
   |     ^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: fields `next`, `prev`, and `element` are never read
  --> ../tests/noproph/list_std_lemma.rs:17:5
   |
16 | struct Node<T> {
   |        ---- fields in this struct
17 |     next: Option<NonNull<Node<T>>>,
   |     ^^^^
18 |     prev: Option<NonNull<Node<T>>>,
   |     ^^^^
19 |     element: T,
   |     ^^^^^^^

warning: 12 warnings emitted

[TIMESTAMP DEBUG rust_to_gil] Correct!
