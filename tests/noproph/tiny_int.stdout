#begin_init_data
{}
#end_init_data

import "i__binop.gil", "i__lang.gil", "i__std_shims.gil", "i__prophecies.gil", "i__ownable.gil", "i__std_shims_no_pcy.gil", "i__lang_no_pcy.gil";

pred "<MyInt as gilogic::Ownable>::own"(+self):
  (0i i<=# l-nth(#self, 0i)) * (l-nth(#self, 0i) i<=# 10i) * (self == #self);


pred "<std::option::Option<MyInt> as gilogic::Ownable>::own"(+self):
  (#self == {{ 0i, {{  }} }}) * (self == #self), (#self == {{ 1i, {{ #ax }} }})
  * "<MyInt as gilogic::Ownable>::own"(#ax)
  * (self == #self);


spec "MyInt::new"(x)
[[ "<u32 as gilogic::Ownable>::own"(#x) * types(#x: Int) * (x == #x) ]]
[["<std::option::Option<MyInt> as gilogic::Ownable>::own"(ret)]]
normal

proc "MyInt::new"(x) {
        m_1x := x;
  bb0:  m_3 := m_1x;
        g_0 := m_3;
        m_2 := (not (g_0 i<= 10i));
        g_1 := m_2;
        goto [g_1] bb1 bb2;
  bb1:  m_0 := {{ 0i, {{  }} }};
        goto bb3;
  bb2:  m_5 := m_1x;
        g_2 := m_5;
        m_4 := {{ g_2 }};
        g_3 := m_4;
        m_0 := {{ 1i, {{ g_3 }} }};
        goto bb3;
  bb3:  g_4 := m_0;
        ret := g_4;
        goto rlab;
  rlab: return
};

