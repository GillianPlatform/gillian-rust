"wp_ref_mut_xy::<T>"(pLft_a, pty_T0, #p, #x, #y) 
 
 "<&mut T as gilogic::Ownable>::own"(pLft_a, pty_T0, {{ l-nth(#y, 0i), l+ (l-nth(#y, 1i), {{ {{ "f", 0i, {{ "adt", "N", {{ pty_T0 }} }} }} }}) }})


params: [PVar("pLft_a"), PVar("pty_T0"), EList([BinOp { operator: LstNth, left_operand: LVar("#y"), right_operand: Lit(Int(0)) }, NOp { operator: LstCat, operands: [BinOp { operator: LstNth, left_operand: LVar("#y"), right_operand: Lit(Int(1)) }, EList([EList([Lit(String("f")), Lit(Int(0)), EList([Lit(String("adt")), Lit(String("N")), EList([PVar("pty_T0")])])])])] }])]
"wp_ref_mut_xy::<T>"(pLft_a, pty_T0, #p, #x, #y) 
 
 "<&mut T as gilogic::Ownable>::own"(pLft_a, pty_T0, {{ l-nth(#x, 0i), l+ (l-nth(#x, 1i), {{ {{ "f", 0i, {{ "adt", "N", {{ pty_T0 }} }} }} }}) }})


params: [PVar("pLft_a"), PVar("pty_T0"), EList([BinOp { operator: LstNth, left_operand: LVar("#x"), right_operand: Lit(Int(0)) }, NOp { operator: LstCat, operands: [BinOp { operator: LstNth, left_operand: LVar("#x"), right_operand: Lit(Int(1)) }, EList([EList([Lit(String("f")), Lit(Int(0)), EList([Lit(String("adt")), Lit(String("N")), EList([PVar("pty_T0")])])])])] }])]
DefId(0:54 ~ omg[b96b]::{impl#0}::new)
[2024-04-24T13:46:24Z WARN  lib_rtg::codegen::block] Not handling drop properly yet: _5
[2024-04-24T13:46:24Z WARN  lib_rtg::codegen::block] Not handling drop properly yet: _9
[2024-04-24T13:46:24Z WARN  lib_rtg::codegen::block] Not handling drop properly yet: _7
[2024-04-24T13:46:24Z WARN  lib_rtg::codegen::block] Not handling drop properly yet: _3
[2024-04-24T13:46:24Z WARN  lib_rtg::codegen::block] Not handling drop properly yet: _2
[2024-04-24T13:46:24Z WARN  lib_rtg::codegen::block] Not handling drop properly yet: _1
DefId(0:58 ~ omg[b96b]::{impl#0}::assign_first)
[2024-04-24T13:46:24Z WARN  lib_rtg::codegen::block] Not handling drop properly yet: ((*((*_1).0: *mut N<T>)).0: T)
[2024-04-24T13:46:24Z WARN  lib_rtg::codegen::block] Not handling drop properly yet: _3
[2024-04-24T13:46:24Z WARN  lib_rtg::codegen::block] Not handling drop properly yet: _2
DefId(0:63 ~ omg[b96b]::{impl#0}::first_mut)
DefId(0:69 ~ omg[b96b]::{impl#0}::second_mut)
adding spec for WP::<T>::second_mut
adding spec for freeze_xy::<T>
adding spec for extract_x::<T>
adding spec for extract_y::<T>
adding spec for WP::<T>::new
adding spec for WP::<T>::assign_first
adding spec for WP::<T>::first_mut
[2024-04-24T13:46:24Z DEBUG rust_to_gil] Correct!
