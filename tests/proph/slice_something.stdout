#begin_init_data
{}
#end_init_data

import "i__binop.gil", "i__lang.gil", "i__std_shims.gil", "i__prophecies.gil", "i__std_shims_pcy.gil", "i__lang_pcy.gil";

pred "<u32 as gilogic::prophecies::Ownable>::own"(+self, model):
  (0i i<=# #self) * (#self i<=# 4294967295i) * (#self == #model)
  * types(#self: Int)
  * types(#model: Int)
  * (model == #model)
  * (self == #self);


proc test(pLft_0, x) {
        m_1x := x;
        g_0 := m_1x;
        m_1x := [alloc]({{ "ref", true, {{ "slice", "u32" }} }});
        u := [store_value](l-nth(m_1x, 0i), l-nth(m_1x, 1i), {{ "ref", true, {{ "slice", "u32" }} }}, g_0);
  bb0:  m_2 := 0i;
        g_2 := [load_value](l-nth(m_1x, 0i), l-nth(m_1x, 1i), {{ "ref", true, {{ "slice", "u32" }} }}, true);
        g_1 := l-nth(g_2, 0i);
        m_3 := l-nth(l-nth(g_1, 0i), 1i);
        m_4 := ((m_2) i< (m_3));
        g_3 := m_4;
        u := "i__lang_assert"(g_3, "bounds check failed");
        goto bb1;
  bb1:  g_5 := [load_value](l-nth(m_1x, 0i), l-nth(m_1x, 1i), {{ "ref", true, {{ "slice", "u32" }} }}, true);
        g_4 := l-nth(g_5, 0i);
        g_7 := [load_value](l-nth(l-nth(l-nth(g_4, 0i), 0i), 0i), l+(l-nth(l-nth(l-nth(g_4, 0i), 0i), 1i), {{ {{ "+", false, m_2, "u32" }} }}), "u32", true);
        g_6 := l-nth(g_7, 0i);
        m_0 := g_6;
        g_8 := m_0;
        ret := g_8;
        goto rlab;
  rlab: u := [free](l-nth(m_1x, 0i), l-nth(m_1x, 1i), {{ "ref", true, {{ "slice", "u32" }} }});
        return
};

spec test2(x)
[[ <value>(l-nth(#x, 0i), l-nth(#x, 1i), "u32"; #m)
  * "<u32 as gilogic::prophecies::Ownable>::own"(#m, #m)
  * types(#m: Int)
  * types(#lvar_0: Obj, #lvar_1: List) * (#x == {{ #lvar_0, #lvar_1 }})
  * (x == #x) ]]
[[ "<u32 as gilogic::prophecies::Ownable>::own"(ret, #m) ]]
normal

proc test2(x) {
        m_1x := x;
        m_2x := [alloc]({{ "ref", true, {{ "slice", "u32" }} }});
        m_3 := [alloc]({{ "ref", true, {{ "slice", "u32" }} }});
  bb0:  m_4 := m_1x;
        g_0 := [new_lft]();
        pLft_6 := l-nth(g_0, 0i);
        g_1 := m_4;
        g_2 := "std::slice::from_raw_parts_mut"(pLft_6, "u32", g_1, 1i);
        u := [store_value](l-nth(m_3, 0i), l-nth(m_3, 1i), {{ "ref", true, {{ "slice", "u32" }} }}, g_2);
        goto bb1;
  bb1:  g_4 := [load_value](l-nth(m_3, 0i), l-nth(m_3, 1i), {{ "ref", true, {{ "slice", "u32" }} }}, true);
        g_3 := l-nth(g_4, 0i);
        g_5 := [new_lft]();
        pLft_5 := l-nth(g_5, 0i);
        u := [store_value](l-nth(m_2x, 0i), l-nth(m_2x, 1i), {{ "ref", true, {{ "slice", "u32" }} }}, g_3);
        g_7 := [load_value](l-nth(m_2x, 0i), l-nth(m_2x, 1i), {{ "ref", true, {{ "slice", "u32" }} }}, true);
        g_6 := l-nth(g_7, 0i);
        g_8 := [new_lft]();
        pLft_7 := l-nth(g_8, 0i);
        m_5 := g_6;
        g_9 := m_5;
        g_10 := "test"(pLft_6, g_9);
        m_0 := g_10;
        goto bb2;
  bb2:  g_11 := m_0;
        ret := g_11;
        goto rlab;
  rlab: u := [free](l-nth(m_2x, 0i), l-nth(m_2x, 1i), {{ "ref", true, {{ "slice", "u32" }} }});
        u := [free](l-nth(m_3, 0i), l-nth(m_3, 1i), {{ "ref", true, {{ "slice", "u32" }} }});
        return
};

