#begin_init_data
{"Option":["Enum",[["None",[]],["Some",[["Param",0]]]]]}
#end_init_data

import "i__binop.gil", "i__lang.gil", "i__std_shims.gil", "i__prophecies.gil", "i__std_shims_pcy.gil", "i__lang_pcy.gil";

axiomatic spec "<&mut u32 as gilogic::prophecies::Prophecised<u32>>::prophecy_resolve"(lft, mut_ref)
trusted
[[ "<&mut u32 as gilogic::prophecies::Ownable>::own"(lft, mut_ref, {{ #current, #future }}) ]]
[[<observation>(((#current) = (#future)); )]]
normal

pred "<u32 as gilogic::prophecies::Ownable>::own"(+self, model):
  (0i i<=# #self) * (#self i<=# 4294967295i) * (#self == #model)
  * types(#self: Int)
  * types(#model: Int)
  * (model == #model)
  * (self == #self);


pred "<std::option::Option<u32> as gilogic::prophecies::Ownable>::own"(+self, model):
  (#self == {{ 0i, {{  }} }}) * (#model == {{ 0i, {{  }} }}) * (model == #model)
  * (self == #self), (#self == {{ 1i, {{ #ax }} }})
  * "<u32 as gilogic::prophecies::Ownable>::own"(#ax, #repr)
  * (#model == {{ 1i, {{ #repr }} }})
  * (model == #model)
  * (self == #self);


pred "<&mut u32 as gilogic::prophecies::Ownable>::own"(+pLft_erased, +self, model):
  (#model == {{ #a, #b }})
  * "gilogic::prophecies::mut_ref_inner_proph::<u32>"(pLft_erased, #self)
  * <value_observer>(l-nth(#self, 1i); #a)
  * (#lvar_0 == #b)
  * <pcy_value>(l-nth(#self, 1i); #lvar_0)
  * types(#lvar_1: Obj, #lvar_2: List, #lvar_3: Obj)
  * (#self == {{ {{ #lvar_1, #lvar_2 }}, #lvar_3 }})
  * (model == #model)
  * (self == #self);


pred "<() as gilogic::prophecies::Ownable>::own"(+self, model):
  (#self == {{  }}) * (#self == #model) * (model == #model) * (self == #self);


pred "gilogic::prophecies::mut_ref_inner_proph::<u32>"(+pLft_a, +this):
  <value>(l-nth(l-nth(#this, 0i), 0i), l-nth(l-nth(#this, 0i), 1i), "u32"; #v)
  * "<u32 as gilogic::prophecies::Ownable>::own"(#v, #repr)
  * <pcy_controller>(l-nth(#this, 1i); #repr)
  * types(#lvar_0: Obj, #lvar_1: List, #lvar_2: Obj)
  * (#this == {{ {{ #lvar_0, #lvar_1 }}, #lvar_2 }})
  * (this == #this);
guard: <lft>(pLft_a; true);

pred "gilogic::prophecies::mut_ref_inner_proph::<u32>$$inner"(+this):
  <value>(l-nth(l-nth(#this, 0i), 0i), l-nth(l-nth(#this, 0i), 1i), "u32"; #v)
  * "<u32 as gilogic::prophecies::Ownable>::own"(#v, #repr)
  * <pcy_controller>(l-nth(#this, 1i); #repr)
  * types(#lvar_0: Obj, #lvar_1: List, #lvar_2: Obj)
  * (#this == {{ {{ #lvar_0, #lvar_1 }}, #lvar_2 }})
  * (this == #this);


spec test()
[[ emp ]]
[["<u32 as gilogic::prophecies::Ownable>::own"(ret, #ret_repr) * <observation>(((#ret_repr) = (4i)); )]]
normal

proc test() {
  bb0:  m_0 := 4i;
        g_0 := m_0;
        ret := g_0;
        goto rlab;
  rlab: return
};

spec test2()
[[ emp ]]
[["<u32 as gilogic::prophecies::Ownable>::own"(ret, #ret_repr) * <observation>(exists #x. ((((((#ret_repr) = (4i))) = (#x))) and (#x)); )]]
normal

proc test2() {
  bb0:  m_0 := 4i;
        g_0 := m_0;
        ret := g_0;
        goto rlab;
  rlab: return
};

spec test3(x)
[[ "<std::option::Option<u32> as gilogic::prophecies::Ownable>::own"(#x, #x_repr) * (x == #x) ]]
[["<u32 as gilogic::prophecies::Ownable>::own"(ret, #ret_repr) * <observation>(((exists #a. ((((#x_repr) = ({{ 1i, {{ #a }} }}))) and (((#ret_repr) = (#a))))) or (((((#x_repr) = ({{ 0i, {{  }} }}))) and (((#ret_repr) = (0i)))))); )]]
normal

proc test3(x) {
        m_1x := x;
        g_0 := m_1x;
        m_1x := [alloc]({{ "adt", "Option", {{ "u32" }} }});
        u := [store_value](l-nth(m_1x, 0i), l-nth(m_1x, 1i), {{ "adt", "Option", {{ "u32" }} }}, g_0);
  bb0:  g_2 := [load_discr](l-nth(m_1x, 0i), l-nth(m_1x, 1i), {{ "adt", "Option", {{ "u32" }} }});
        g_1 := l-nth(g_2, 0i);
        m_2 := g_1;
        g_3 := m_2;
        goto [((g_3) = (0i))] bb3 sw0;
  sw0:  goto [((g_3) = (1i))] bb2 sw1;
  sw1:  goto bb1;
  bb1:  fail [Unreachable]();
  bb2:  goto bb4;
  bb3:  m_0 := 0i;
        goto bb5;
  bb4:  g_5 := [load_value](l-nth(m_1x, 0i), l+(l-nth(m_1x, 1i), {{ {{ "vf", 0i, {{ "adt", "Option", {{ "u32" }} }}, 1i }} }}), "u32", true);
        g_4 := l-nth(g_5, 0i);
        m_3x := g_4;
        m_0 := m_3x;
        goto bb5;
  bb5:  g_6 := m_0;
        ret := g_6;
        goto rlab;
  rlab: u := [free](l-nth(m_1x, 0i), l-nth(m_1x, 1i), {{ "adt", "Option", {{ "u32" }} }});
        return
};

spec write(pLft_0, x)
[[ "<&mut u32 as gilogic::prophecies::Ownable>::own"(#pLft_0, #x, #x_repr) * <observation>(((l-nth(#x_repr, 0i)) = (0i)); ) * <lft>(#pLft_0; true) * types(#lvar_0: Obj, #lvar_1: List, #lvar_2: Obj) * (#x == {{ {{ #lvar_0, #lvar_1 }}, #lvar_2 }}) * (x == #x) * (pLft_0 == #pLft_0) ]]
[["<() as gilogic::prophecies::Ownable>::own"(ret, #ret_repr) * <observation>(((l-nth(#x_repr, 1i)) = (1i)); ) * <lft>(#pLft_0; true)]]
normal

proc write(pLft_0, x) {
        m_1x := x;
        g_0 := m_1x;
        m_1x := [alloc]({{ "ref", true, "u32" }});
        u := [store_value](l-nth(m_1x, 0i), l-nth(m_1x, 1i), {{ "ref", true, "u32" }}, g_0);
  bb0:  g_2 := [load_value](l-nth(m_1x, 0i), l-nth(m_1x, 1i), {{ "ref", true, "u32" }}, true);
        g_1 := l-nth(g_2, 0i);
        u := [store_value](l-nth(l-nth(g_1, 0i), 0i), l-nth(l-nth(g_1, 0i), 1i), "u32", 1i);
        g_4 := [load_value](l-nth(m_1x, 0i), l-nth(m_1x, 1i), {{ "ref", true, "u32" }}, true);
        g_3 := l-nth(g_4, 0i);
        g_5 := [new_lft]();
        pLft_8 := l-nth(g_5, 0i);
        m_3 := g_3;
        g_6 := m_3;
        g_7 := "<&mut u32 as gilogic::prophecies::Prophecised<u32>>::prophecy_auto_update"(pLft_0, g_6);
        m_2 := g_7;
        goto bb1;
  bb1:  g_9 := [load_value](l-nth(m_1x, 0i), l-nth(m_1x, 1i), {{ "ref", true, "u32" }}, true);
        g_8 := l-nth(g_9, 0i);
        g_10 := [new_lft]();
        pLft_9 := l-nth(g_10, 0i);
        m_5 := g_8;
        g_11 := m_5;
        g_12 := "<&mut u32 as gilogic::prophecies::Prophecised<u32>>::prophecy_resolve"(pLft_0, g_11);
        m_4 := g_12;
        goto bb2;
  bb2:  m_0 := {{}};
        g_13 := m_0;
        ret := g_13;
        goto rlab;
  rlab: u := [free](l-nth(m_1x, 0i), l-nth(m_1x, 1i), {{ "ref", true, "u32" }});
        return
};

spec write2(pLft_0, x)
[[ "<&mut u32 as gilogic::prophecies::Ownable>::own"(#pLft_0, #x, #x_repr) * <observation>(((l-nth(#x_repr, 0i)) = (0i)); ) * <lft>(#pLft_0; true) * types(#lvar_0: Obj, #lvar_1: List, #lvar_2: Obj) * (#x == {{ {{ #lvar_0, #lvar_1 }}, #lvar_2 }}) * (x == #x) * (pLft_0 == #pLft_0) ]]
[["<() as gilogic::prophecies::Ownable>::own"(ret, #ret_repr) * <observation>(((l-nth(#x_repr, 1i)) = (1i)); ) * <lft>(#pLft_0; true)]]
normal

proc write2(pLft_0, x) {
        m_1x := x;
        g_0 := m_1x;
        m_1x := [alloc]({{ "ref", true, "u32" }});
        u := [store_value](l-nth(m_1x, 0i), l-nth(m_1x, 1i), {{ "ref", true, "u32" }}, g_0);
  bb0:  g_2 := [load_value](l-nth(m_1x, 0i), l-nth(m_1x, 1i), {{ "ref", true, "u32" }}, true);
        g_1 := l-nth(g_2, 0i);
        u := [store_value](l-nth(l-nth(g_1, 0i), 0i), l-nth(l-nth(g_1, 0i), 1i), "u32", 1i);
        g_4 := [load_value](l-nth(m_1x, 0i), l-nth(m_1x, 1i), {{ "ref", true, "u32" }}, true);
        g_3 := l-nth(g_4, 0i);
        g_5 := [new_lft]();
        pLft_8 := l-nth(g_5, 0i);
        m_3 := g_3;
        g_6 := m_3;
        g_7 := "<&mut u32 as gilogic::prophecies::Prophecised<u32>>::prophecy_auto_update"(pLft_0, g_6);
        m_2 := g_7;
        goto bb1;
  bb1:  g_9 := [load_value](l-nth(m_1x, 0i), l-nth(m_1x, 1i), {{ "ref", true, "u32" }}, true);
        g_8 := l-nth(g_9, 0i);
        g_10 := [new_lft]();
        pLft_9 := l-nth(g_10, 0i);
        m_5 := g_8;
        g_11 := m_5;
        g_12 := "<&mut u32 as gilogic::prophecies::Prophecised<u32>>::prophecy_resolve"(pLft_0, g_11);
        m_4 := g_12;
        goto bb2;
  bb2:  m_0 := {{}};
        g_13 := m_0;
        ret := g_13;
        goto rlab;
  rlab: u := [free](l-nth(m_1x, 0i), l-nth(m_1x, 1i), {{ "ref", true, "u32" }});
        return
};

proc "<&mut u32 as gilogic::prophecies::Prophecised<u32>>::prophecy_auto_update"(pLft_a, mut_ref) {
    sep_assert (<value>(l-nth(l-nth(mut_ref, 0i), 0i), l-nth(l-nth(mut_ref, 0i), 1i), "u32"; #pointee) * "<u32 as gilogic::prophecies::Ownable>::own"(#pointee, #new_repr))[bind: #new_repr];
    u := [pcy_assign](l-nth(mut_ref, 1i), #new_repr);
    ret := {{  }};
    return
};

