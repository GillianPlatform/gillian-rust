warning: unused imports: `Prophecised`, `Prophecy`, `extract_lemma`, `mutref_auto_resolve`, `prophecies::with_freeze_lemma_for_mutref`
  --> ../tests/proph/lemma_tests.rs:6:20
   |
6  |         assertion, extract_lemma, lemma, predicate, prophecies::with_freeze_lemma_for_mutref,
   |                    ^^^^^^^^^^^^^                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
9  |     mutref_auto_resolve,
   |     ^^^^^^^^^^^^^^^^^^^
10 |     prophecies::{Ownable, Prophecised, Prophecy},
   |                           ^^^^^^^^^^^  ^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

[TIMESTAMP WARN  lib_rtg::metadata] could not read metadata for crate `"std"`: Os { code: 2, kind: NotFound, message: "No such file or directory" }
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _4
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _1
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _1
warning: unused variable: `head`
   --> ../tests/proph/lemma_tests.rs:107:5
    |
107 |     head: Option<NonNull<Node<T>>>,
    |     ^^^^ help: if this is intentional, prefix it with an underscore: `_head`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `tail_next`
   --> ../tests/proph/lemma_tests.rs:108:5
    |
108 |     tail_next: Option<NonNull<Node<T>>>,
    |     ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tail_next`

warning: unused variable: `tail`
   --> ../tests/proph/lemma_tests.rs:109:5
    |
109 |     tail: Option<NonNull<Node<T>>>,
    |     ^^^^ help: if this is intentional, prefix it with an underscore: `_tail`

warning: unused variable: `head_prev`
   --> ../tests/proph/lemma_tests.rs:110:5
    |
110 |     head_prev: Option<NonNull<Node<T>>>,
    |     ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_head_prev`

warning: fields `head`, `tail`, and `len` are never read
  --> ../tests/proph/lemma_tests.rs:19:5
   |
18 | pub struct LinkedList<T> {
   |            ---------- fields in this struct
19 |     head: Option<NonNull<Node<T>>>,
   |     ^^^^
20 |     tail: Option<NonNull<Node<T>>>,
   |     ^^^^
21 |     len: usize,
   |     ^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: fields `next`, `prev`, and `element` are never read
  --> ../tests/proph/lemma_tests.rs:26:5
   |
25 | struct Node<T> {
   |        ---- fields in this struct
26 |     next: Option<NonNull<Node<T>>>,
   |     ^^^^
27 |     prev: Option<NonNull<Node<T>>>,
   |     ^^^^
28 |     element: T,
   |     ^^^^^^^

warning: associated function `shallow_model` is never used
  --> ../tests/proph/lemma_tests.rs:34:8
   |
31 | trait ShallowModel: Ownable {
   |       ------------ associated function in this trait
...
34 |     fn shallow_model(self_: Self::RepresentationTy, v: Self::ModelTy) -> gilogic::RustAssertion;
   |        ^^^^^^^^^^^^^

warning: associated items `new` and `into_element` are never used
  --> ../tests/proph/lemma_tests.rs:47:8
   |
46 | impl<T> Node<T> {
   | --------------- associated items in this implementation
47 |     fn new(element: T) -> Self {
   |        ^^^
...
55 |     fn into_element(self: Box<Self>) -> T {
   |        ^^^^^^^^^^^^

warning: function `dll_seg_l_to_r` is never used
   --> ../tests/proph/lemma_tests.rs:106:4
    |
106 | fn dll_seg_l_to_r<T: Ownable>(
    |    ^^^^^^^^^^^^^^

warning: 10 warnings emitted

[TIMESTAMP DEBUG rust_to_gil] Correct!
