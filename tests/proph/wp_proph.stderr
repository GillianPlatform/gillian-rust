warning: unused import: `specification`
 --> ../tests/proph/wp_proph.rs:8:51
  |
8 |     macros::{assertion, extract_lemma, predicate, specification, with_freeze_lemma},
  |                                                   ^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

[TIMESTAMP WARN  lib_rtg::metadata] could not read metadata for crate `"std"`: Os { code: 2, kind: NotFound, message: "No such file or directory" }
[TIMESTAMP WARN  lib_rtg::metadata] could not read metadata for crate `"creusillian"`: Os { code: 2, kind: NotFound, message: "No such file or directory" }
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _6
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _10
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _8
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _4
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _2
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _1
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: ((*((*_1).0: *mut N<T>)).0: T)
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _3
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _2
warning: unused variable: `p`
  --> ../tests/proph/wp_proph.rs:61:30
   |
61 | fn extract_y<'a, T: Ownable>(p: &'a mut WP<T>) -> Prophecy<T::RepresentationTy>;
   |                              ^ help: if this is intentional, prefix it with an underscore: `_p`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: fields `x` and `y` are never read
  --> ../tests/proph/wp_proph.rs:14:5
   |
13 | struct WP<T> {
   |        -- fields in this struct
14 |     x: *mut N<T>,
   |     ^
15 |     y: *mut N<T>,
   |     ^
   |
   = note: `#[warn(dead_code)]` on by default

warning: fields `v` and `o` are never read
  --> ../tests/proph/wp_proph.rs:19:5
   |
18 | struct N<T> {
   |        - fields in this struct
19 |     v: T,
   |     ^
20 |     o: *mut N<T>,
   |     ^

warning: variable `THIS` should have a snake case name
  --> ../tests/proph/wp_proph.rs:48:12
   |
48 |     fn own(self, model: Self::RepresentationTy) {
   |            ^^^^ help: convert the identifier to snake case: `this`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: function `extract_y___proof` should have a snake case name
  --> ../tests/proph/wp_proph.rs:61:4
   |
61 | fn extract_y<'a, T: Ownable>(p: &'a mut WP<T>) -> Prophecy<T::RepresentationTy>;
   |    ^^^^^^^^^ help: convert the identifier to snake case: `extract_y_proof`

warning: 6 warnings emitted

[TIMESTAMP DEBUG rust_to_gil] Correct!
