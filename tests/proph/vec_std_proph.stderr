warning: unused import: `all_own_swap`
  --> ../tests/proph/vec_std_proph.rs:11:25
   |
11 |     iterated::{all_own, all_own_swap},
   |                         ^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

[TIMESTAMP WARN  lib_rtg::metadata] could not read metadata for crate `"std"`: Os { code: 2, kind: NotFound, message: "No such file or directory" }
e18
e56
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _2
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _12
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _2
pred "vec_ref_mut_pcl::<T>$$inner"(+pty_T0, +REFERENCE, model, ptr, cap, len):
  (#model == {{ #current, #lvar_9 }})
  * <value_observer>(l-nth(#REFERENCE, 1i); #current)
  * "vec_ref_mut_inner_pcl::<T>$$inner"(pty_T0, #REFERENCE, #ptr, #cap, #len)
  * <pcy_value>(l-nth(#REFERENCE, 1i); #lvar_9)
  * types(#lvar_10: Obj, #lvar_11: List, #lvar_12: Obj)
  * (#REFERENCE == {{ {{ #lvar_10, #lvar_11 }}, #lvar_12 }})
  * types(#lvar_13: Obj, #lvar_14: List)
  * (#ptr == {{ {{ {{ #lvar_13, #lvar_14 }} }}, {{  }} }})
  * types(#cap: Int)
  * types(#len: Int)
  * (len == #len)
  * (cap == #cap)
  * (ptr == #ptr)
  * (model == #model)
  * (REFERENCE == #REFERENCE);

pred "<&mut T as gilogic::prophecies::Ownable>::own$$inner"(+pty_T0, +self, model):
  (#model == {{ #a, #b }})
  * "gilogic::prophecies::mut_ref_inner_proph::<T>$$inner"(pty_T0, #self)
  * <value_observer>(l-nth(#self, 1i); #a)
  * (#lvar_3 == #b)
  * <pcy_value>(l-nth(#self, 1i); #lvar_3)
  * types(#lvar_4: Obj, #lvar_5: List, #lvar_6: Obj)
  * (#self == {{ {{ #lvar_4, #lvar_5 }}, #lvar_6 }})
  * (model == #model)
  * (self == #self);

warning: the feature `unchecked_math` has been stable since 1.79.0 and no longer requires an attribute to enable
 --> ../tests/proph/vec_std_proph.rs:5:12
  |
5 | #![feature(unchecked_math)]
  |            ^^^^^^^^^^^^^^
  |
  = note: `#[warn(stable_features)]` on by default

warning: unused variable: `vec`
   --> ../tests/proph/vec_std_proph.rs:311:32
    |
311 | fn extract_ith<'a, T: Ownable>(vec: &'a mut Vec<T>, ix: usize) -> Prophecy<T::RepresentationTy>;
    |                                ^^^ help: if this is intentional, prefix it with an underscore: `_vec`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `ix`
   --> ../tests/proph/vec_std_proph.rs:311:53
    |
311 | fn extract_ith<'a, T: Ownable>(vec: &'a mut Vec<T>, ix: usize) -> Prophecy<T::RepresentationTy>;
    |                                                     ^^ help: if this is intentional, prefix it with an underscore: `_ix`

warning: variant `Zeroed` is never constructed
  --> ../tests/proph/vec_std_proph.rs:66:5
   |
62 | enum AllocInit {
   |      --------- variant in this enum
...
66 |     Zeroed,
   |     ^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: variable `REFERENCE` should have a snake case name
   --> ../tests/proph/vec_std_proph.rs:324:12
    |
324 |     fn own(self, model: Self::RepresentationTy) {
    |            ^^^^ help: convert the identifier to snake case: `reference`
    |
    = note: `#[warn(non_snake_case)]` on by default

warning: 6 warnings emitted

[TIMESTAMP DEBUG rust_to_gil] Correct!
