warning: unused import: `lemma`
  --> ../tests/proph/vec_std_proph.rs:11:25
   |
11 |     macros::{assertion, lemma, predicate, specification, prophecies::with_freeze_lemma_for_mutref},
   |                         ^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused macro definition: `auto_resolve_vec_ref_mut_pcl`
   --> ../tests/proph/vec_std_proph.rs:317:26
    |
317 |     resolve_macro_name = auto_resolve_vec_ref_mut_pcl
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_macros)]` on by default

[TIMESTAMP WARN  lib_rtg::metadata] could not read metadata for crate `"std"`: Os { code: 2, kind: NotFound, message: "No such file or directory" }
[TIMESTAMP WARN  lib_rtg::codegen::block] Not handling drop properly yet: _2
warning: the feature `unchecked_math` has been stable since 1.79.0 and no longer requires an attribute to enable
 --> ../tests/proph/vec_std_proph.rs:5:12
  |
5 | #![feature(unchecked_math)]
  |            ^^^^^^^^^^^^^^
  |
  = note: `#[warn(stable_features)]` on by default

warning: variant `Zeroed` is never constructed
  --> ../tests/proph/vec_std_proph.rs:62:5
   |
58 | enum AllocInit {
   |      --------- variant in this enum
...
62 |     Zeroed,
   |     ^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: variable `REFERENCE` should have a snake case name
   --> ../tests/proph/vec_std_proph.rs:323:12
    |
323 |     fn own(self, model: Self::RepresentationTy) {
    |            ^^^^ help: convert the identifier to snake case: `reference`
    |
    = note: `#[warn(non_snake_case)]` on by default

warning: 5 warnings emitted

[TIMESTAMP DEBUG rust_to_gil] Correct!
