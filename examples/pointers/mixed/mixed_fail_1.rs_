#![no_std]

struct R8 {
    x: u8,
}

struct R64 {
    x: u64,
}

#[repr(C)]
struct C8 {
    x: u8,
}

#[repr(C)]
struct C16 {
    x: u16,
}

#[repr(C)]
struct A {
    x: R8,
    y: R64,
}

#[repr(C)]
struct B {
    x: A,
    y: R64,
}

pub fn main() -> R64 {
    let b = B {
        x: A {
            x: R8 { x: 1 },
            y: R64 { x: 2 },
        },
        y: R64 { x: 3 },
    };
    let p = &b.x.y as *const R64;
    unsafe { *(p.add(1)) } // SHOULDBEFAILING
}
