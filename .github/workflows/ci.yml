name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      # Basic setups
      - uses: actions/checkout@v3
      # - uses: Swatinem/rust-cache@v2
      
      # - run: cargo build
      # - run: cargo check
      # - run: cargo clippy
      
      # OCaml setup and build/test
      - uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: "ocaml-variants.5.1.1+options"
      - name: OCaml cache
        id: ocaml-cache
        uses: actions/cache@v3
        env:
          cache-name: cache-ocaml
        with:
          path: ${{ github.workspace }}/Gillian-Rust/_opam
          key: ${{ runner.os }}-${{ env.cache-name }}-ocaml5.1-${{ hashFiles('**/*.opam') }}-${{ hashFiles('**/*.opam.locked') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-ocaml5.1-${{ hashFiles('**/*.opam') }}-${{ hashFiles('**/*.opam.locked') }}
            ${{ runner.os }}-${{ env.cache-name }}-ocaml5.1
      - run: opam switch list 
      - run: opam install . --deps-only --with-test --locked
        working-directory: "Gillian-Rust"
      - run: opam exec -- dune build @all
        working-directory: "Gillian-Rust"
      - run: opam exec -- dune test
        working-directory: "Gillian-Rust"

      # External tests
      - run: ./test_all.sh
      
      # Cleanup _opam before updating cache
      - if: ${{ steps.cache-ocaml.outputs.cache-hit != 'true' }}
        name: Cleanup _opam before updating cache
        continue-on-error: true
        run: opam clean
        working-directory: "Gillian-Rust"
